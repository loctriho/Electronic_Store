{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/order.service\";\nimport * as i2 from \"../service/cart.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CheckoutComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.orderMessage, \" \");\n  }\n}\nfunction CheckoutComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\");\n    i0.ɵɵtext(2, \"Checkout\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function CheckoutComponent_div_6_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n    i0.ɵɵtext(6, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"div\", 4)(11, \"label\", 9);\n    i0.ɵɵtext(12, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 4)(16, \"label\", 11);\n    i0.ɵɵtext(17, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 13);\n    i0.ɵɵtext(21, \"Street No\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 15);\n    i0.ɵɵtext(25, \"Apartment (if available)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 17);\n    i0.ɵɵtext(29, \"City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"input\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 4)(32, \"label\", 19);\n    i0.ɵɵtext(33, \"State\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 4)(36, \"label\", 21);\n    i0.ɵɵtext(37, \"Zip Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 23);\n    i0.ɵɵelement(40, \"input\", 24);\n    i0.ɵɵelementStart(41, \"label\", 25);\n    i0.ɵɵtext(42, \"Use as Default Address\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 4)(44, \"label\", 26);\n    i0.ɵɵtext(45, \"Card Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"select\", 27)(47, \"option\", 28);\n    i0.ɵɵtext(48, \"Mastercard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"option\", 29);\n    i0.ɵɵtext(50, \"Visa\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(51, \"div\", 4)(52, \"label\", 30);\n    i0.ɵɵtext(53, \"Cardholder Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(54, \"input\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"div\", 4)(56, \"label\", 32);\n    i0.ɵɵtext(57, \"Card Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(58, \"input\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(59, \"div\", 4)(60, \"label\", 34);\n    i0.ɵɵtext(61, \"CVV\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(62, \"input\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(63, \"br\");\n    i0.ɵɵelementStart(64, \"button\", 36);\n    i0.ɵɵtext(65, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.checkoutForm);\n    i0.ɵɵadvance(61);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.checkoutForm.valid);\n  }\n}\nclass CheckoutComponent {\n  constructor(orderService, cartService) {\n    this.orderService = orderService;\n    this.cartService = cartService;\n    this.orderMessage = '';\n    this.orderPlaced = false; // new property\n    this.username = null;\n    this.email = null;\n    this.first_name = null;\n    this.last_name = null;\n    this.address = {\n      street: '',\n      apartment: '',\n      city: '',\n      state: '',\n      zipCode: ''\n    };\n    this.cart = []; // cart details\n    this.cartQuantities = {}; // cart quantities\n    this.totalAmount = 0; // total cart amount\n  }\n\n  ngOnInit() {\n    this.username = localStorage.getItem('username');\n    this.first_name = localStorage.getItem('first_name');\n    this.last_name = localStorage.getItem('last_name');\n    this.address.city = localStorage.getItem('city') ?? '';\n    this.address.street = localStorage.getItem('streetNo') ?? '';\n    this.address.apartment = localStorage.getItem('apartment') ?? '';\n    this.address.zipCode = localStorage.getItem('zipCode') ?? '';\n    this.address.state = localStorage.getItem('state') ?? '';\n    // get cart details\n    this.cart = this.cartService.getCart();\n    this.cartQuantities = this.cartService.getCartQuantities();\n    this.totalAmount = this.cartService.getTotalPrice();\n    this.checkoutForm = new FormGroup({\n      username: new FormControl({\n        value: this.username,\n        disabled: true\n      }),\n      lastName: new FormControl({\n        value: this.last_name,\n        disabled: true\n      }),\n      firstName: new FormControl({\n        value: this.first_name,\n        disabled: true\n      }),\n      addressStreetNo: new FormControl(this.address.street, Validators.required),\n      addressApartment: new FormControl(this.address.apartment),\n      addressCity: new FormControl(this.address.city, Validators.required),\n      addressState: new FormControl(this.address.state, Validators.required),\n      addressZip: new FormControl(this.address.zipCode, Validators.required),\n      defaultAddress: new FormControl(false),\n      cardHolderName: new FormControl('', Validators.required),\n      cardType: new FormControl('', Validators.required),\n      cardNumber: new FormControl('', Validators.required),\n      cvv: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(3)])\n    });\n  }\n  onSubmit() {\n    if (this.checkoutForm.valid) {\n      const orderData = this.checkoutForm.value;\n      // Include the disabled fields manually\n      const transformedOrderData = {\n        username: this.username,\n        firstName: this.first_name,\n        lastName: this.last_name,\n        address: {\n          street: orderData.addressStreetNo,\n          apartment: orderData.addressApartment,\n          city: orderData.addressCity,\n          state: orderData.addressState,\n          zipCode: orderData.addressZip\n        },\n        cardholder: orderData.cardHolderName,\n        cardType: orderData.cardType,\n        cardNumber: orderData.cardNumber,\n        cvv: orderData.cvv,\n        cartDetails: this.cart.map(product => ({\n          productId: product.productId,\n          price: product.price,\n          quantity: this.cartQuantities[product.productId]\n        })),\n        totalAmount: this.totalAmount\n      }; // include total amount\n      // Check if the \"Use as Default Address\" checkbox is checked\n      const isDefaultAddress = orderData.defaultAddress;\n      // Call the updateAddress observable if the checkbox is checked\n      if (isDefaultAddress) {\n        const addressData = {\n          username: this.username,\n          addressStreetNo: orderData.addressStreetNo,\n          addressApartment: orderData.addressApartment,\n          addressCity: orderData.addressCity,\n          addressState: orderData.addressState,\n          addressZip: orderData.addressZip\n        };\n        this.orderService.updateAddress(addressData).subscribe(response => {\n          console.log('Default address updated successfully.');\n          this.createOrderAndClearCart(transformedOrderData);\n        }, error => console.error('Error during address update:', error));\n      } else {\n        // If the checkbox is not checked, directly create the order and clear the cart\n        this.createOrderAndClearCart(transformedOrderData);\n      }\n    }\n  }\n  // Helper method to create order and clear cart\n  createOrderAndClearCart(orderData) {\n    this.orderService.createOrder(orderData).subscribe(response => {\n      this.cartService.clearCart();\n      this.orderPlaced = true; // set the flag to true\n      this.orderMessage = `Thank you for your purchase. Your order id is ${response.orderId}`;\n    }, error => console.error('There was an error during the order creation', error));\n  }\n}\nCheckoutComponent.ɵfac = function CheckoutComponent_Factory(t) {\n  return new (t || CheckoutComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.CartService));\n};\nCheckoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckoutComponent,\n  selectors: [[\"app-checkout\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"checkout-form\", \"style\", \"margin-left: 5%; margin-right: 5%;\", 4, \"ngIf\"], [1, \"checkout-form\", 2, \"margin-left\", \"5%\", \"margin-right\", \"5%\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"readonly\", \"\", 1, \"form-control\"], [1, \"form-row\"], [1, \"col\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", \"readonly\", \"\", 1, \"form-control\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", \"readonly\", \"\", 1, \"form-control\"], [\"for\", \"addressStreetNo\"], [\"type\", \"text\", \"id\", \"addressStreetNo\", \"formControlName\", \"addressStreetNo\", 1, \"form-control\"], [\"for\", \"addressApartment\"], [\"type\", \"text\", \"id\", \"addressApartment\", \"formControlName\", \"addressApartment\", 1, \"form-control\"], [\"for\", \"addressCity\"], [\"type\", \"text\", \"id\", \"addressCity\", \"formControlName\", \"addressCity\", 1, \"form-control\"], [\"for\", \"addressState\"], [\"type\", \"text\", \"id\", \"addressState\", \"formControlName\", \"addressState\", 1, \"form-control\"], [\"for\", \"addressZip\"], [\"type\", \"text\", \"id\", \"addressZip\", \"formControlName\", \"addressZip\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"defaultAddress\", \"formControlName\", \"defaultAddress\", 1, \"form-check-input\"], [\"for\", \"defaultAddress\", 1, \"form-check-label\"], [\"for\", \"cardType\"], [\"id\", \"cardType\", \"formControlName\", \"cardType\", 1, \"form-control\"], [\"value\", \"mastercard\"], [\"value\", \"visa\"], [\"for\", \"cardHolderName\"], [\"type\", \"text\", \"id\", \"cardHolderName\", \"formControlName\", \"cardHolderName\", 1, \"form-control\"], [\"for\", \"cardNumber\"], [\"type\", \"text\", \"id\", \"cardNumber\", \"formControlName\", \"cardNumber\", 1, \"form-control\"], [\"for\", \"cvv\"], [\"type\", \"text\", \"id\", \"cvv\", \"formControlName\", \"cvv\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function CheckoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Checkout Form\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\");\n      i0.ɵɵtemplate(5, CheckoutComponent_p_5_Template, 2, 1, \"p\", 0);\n      i0.ɵɵtemplate(6, CheckoutComponent_div_6_Template, 66, 2, \"div\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.orderPlaced);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.orderPlaced);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CheckoutComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","orderMessage","ɵɵlistener","CheckoutComponent_div_6_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelement","ɵɵproperty","ctx_r1","checkoutForm","valid","CheckoutComponent","constructor","orderService","cartService","orderPlaced","username","email","first_name","last_name","address","street","apartment","city","state","zipCode","cart","cartQuantities","totalAmount","ngOnInit","localStorage","getItem","getCart","getCartQuantities","getTotalPrice","value","disabled","lastName","firstName","addressStreetNo","required","addressApartment","addressCity","addressState","addressZip","defaultAddress","cardHolderName","cardType","cardNumber","cvv","minLength","maxLength","orderData","transformedOrderData","cardholder","cartDetails","map","product","productId","price","quantity","isDefaultAddress","addressData","updateAddress","subscribe","response","console","log","createOrderAndClearCart","error","createOrder","clearCart","orderId","ɵɵdirectiveInject","i1","OrderService","i2","CartService","selectors","decls","vars","consts","template","CheckoutComponent_Template","rf","ctx","ɵɵtemplate","CheckoutComponent_p_5_Template","CheckoutComponent_div_6_Template"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\AngularProject\\my-app\\src\\app\\checkout\\checkout.component.ts","C:\\Users\\msitr\\OneDrive\\Desktop\\AngularProject\\my-app\\src\\app\\checkout\\checkout.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Address } from '../models/address.model';\nimport { OrderService } from '../service/order.service';\nimport { Product } from '../models/product.model';\nimport { CartService } from '../service/cart.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  orderMessage: string = '';\n  orderPlaced = false;  // new property\n\n  checkoutForm!: FormGroup;\n  username: string | null = null;\n  email: string | null = null;\n  first_name: string | null = null;\n  last_name: string | null = null;\n  address: Address = {\n    street: '',\n    apartment: '',\n    city: '',\n    state: '',\n    zipCode: ''\n  };\n\n  cart: Product[] = []; // cart details\n  cartQuantities: { [key: number]: number } = {}; // cart quantities\n  totalAmount: number = 0; // total cart amount\n\n  constructor(private orderService: OrderService, private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.username = localStorage.getItem('username');\n    this.first_name = localStorage.getItem('first_name');\n    this.last_name = localStorage.getItem('last_name');\n    this.address.city = localStorage.getItem('city') ?? '';\n    this.address.street = localStorage.getItem('streetNo') ?? '';\n    this.address.apartment = localStorage.getItem('apartment') ?? '';\n    this.address.zipCode = localStorage.getItem('zipCode') ?? '';\n    this.address.state = localStorage.getItem('state') ?? '';\n\n    // get cart details\n    this.cart = this.cartService.getCart();\n    this.cartQuantities = this.cartService.getCartQuantities();\n    this.totalAmount = this.cartService.getTotalPrice();\n\n    this.checkoutForm = new FormGroup({\n      username: new FormControl({ value: this.username, disabled: true }),\n      lastName: new FormControl({ value: this.last_name, disabled: true }),\n      firstName: new FormControl({ value: this.first_name, disabled: true }),\n      addressStreetNo: new FormControl(this.address.street, Validators.required),\n      addressApartment: new FormControl(this.address.apartment),\n      addressCity: new FormControl(this.address.city, Validators.required),\n      addressState: new FormControl(this.address.state, Validators.required),\n      addressZip: new FormControl(this.address.zipCode, Validators.required),\n      defaultAddress: new FormControl(false),\n      cardHolderName: new FormControl('', Validators.required),\n      cardType: new FormControl('', Validators.required),\n      cardNumber: new FormControl('', Validators.required),\n      cvv: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]),\n    });\n  }\n\n  onSubmit(): void {\n    if (this.checkoutForm.valid) {\n      const orderData = this.checkoutForm.value;\n\n      // Include the disabled fields manually\n      const transformedOrderData = {\n        username: this.username,\n        firstName: this.first_name,\n        lastName: this.last_name,\n        address: {\n          street: orderData.addressStreetNo,\n          apartment: orderData.addressApartment,\n          city: orderData.addressCity,\n          state: orderData.addressState,\n          zipCode: orderData.addressZip\n        },\n        cardholder: orderData.cardHolderName,\n        cardType: orderData.cardType,\n        cardNumber: orderData.cardNumber,\n        cvv: orderData.cvv,\n        cartDetails: this.cart.map(product => ({\n          productId: product.productId,\n          price: product.price,\n          quantity: this.cartQuantities[product.productId]\n        })), // include cart details and quantities\n        totalAmount: this.totalAmount\n      }; // include total amount\n\n      // Check if the \"Use as Default Address\" checkbox is checked\n      const isDefaultAddress = orderData.defaultAddress;\n\n      // Call the updateAddress observable if the checkbox is checked\n      if (isDefaultAddress) {\n        const addressData = {\n          username: this.username,\n          addressStreetNo: orderData.addressStreetNo,\n          addressApartment: orderData.addressApartment,\n          addressCity: orderData.addressCity,\n          addressState: orderData.addressState,\n          addressZip: orderData.addressZip\n        };\n\n        this.orderService.updateAddress(addressData).subscribe(\n          response => {\n            console.log('Default address updated successfully.');\n            this.createOrderAndClearCart(transformedOrderData);\n          },\n          error => console.error('Error during address update:', error)\n        );\n      } else {\n        // If the checkbox is not checked, directly create the order and clear the cart\n        this.createOrderAndClearCart(transformedOrderData);\n      }\n    }\n  }\n\n  // Helper method to create order and clear cart\n  private createOrderAndClearCart(orderData: any): void {\n    this.orderService.createOrder(orderData).subscribe(\n      response => {\n        this.cartService.clearCart();\n        this.orderPlaced = true; // set the flag to true\n        this.orderMessage = `Thank you for your purchase. Your order id is ${response.orderId}`;\n      },\n      error => console.error('There was an error during the order creation', error)\n    );\n  }\n  \n}\n","<!DOCTYPE html>\n<html>\n<head>\n  <title>Checkout Form</title>\n  <!-- Add here your CSS links -->\n</head>\n<body>\n  <p *ngIf=\"orderPlaced\"> {{ orderMessage }} </p>\n\n  <div class=\"checkout-form\" style=\"margin-left: 5%; margin-right: 5%;\" *ngIf=\"!orderPlaced\">\n\n    <h2>Checkout</h2>\n    <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" id=\"username\" formControlName=\"username\" class=\"form-control\" readonly>\n      </div>\n      <!-- <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\" readonly>\n      </div> -->\n      <div class=\"form-row\">\n        <div class=\"col\">\n          <div class=\"form-group\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" readonly>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"form-group\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" readonly>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"addressStreetNo\">Street No</label>\n        <input type=\"text\" id=\"addressStreetNo\" formControlName=\"addressStreetNo\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"addressApartment\">Apartment (if available)</label>\n        <input type=\"text\" id=\"addressApartment\" formControlName=\"addressApartment\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"addressCity\">City</label>\n        <input type=\"text\" id=\"addressCity\" formControlName=\"addressCity\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"addressState\">State</label>\n        <input type=\"text\" id=\"addressState\" formControlName=\"addressState\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"addressZip\">Zip Code</label>\n        <input type=\"text\" id=\"addressZip\" formControlName=\"addressZip\" class=\"form-control\">\n      </div>\n      <div class=\"form-check\">\n        <input type=\"checkbox\" id=\"defaultAddress\" formControlName=\"defaultAddress\" class=\"form-check-input\">\n        <label for=\"defaultAddress\" class=\"form-check-label\">Use as Default Address</label>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"cardType\">Card Type</label>\n        <select id=\"cardType\" formControlName=\"cardType\" class=\"form-control\">\n          <option value=\"mastercard\">Mastercard</option>\n          <option value=\"visa\">Visa</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"cardHolderName\">Cardholder Name</label>\n        <input type=\"text\" id=\"cardHolderName\" formControlName=\"cardHolderName\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"cardNumber\">Card Number</label>\n        <input type=\"text\" id=\"cardNumber\" formControlName=\"cardNumber\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"cvv\">CVV</label>\n        <input type=\"text\" id=\"cvv\" formControlName=\"cvv\" class=\"form-control\">\n      </div>\n      <br>\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!checkoutForm.valid\">Submit</button>\n    </form>\n  </div>\n</body>\n</html>\n"],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICMjEC,EAAA,CAAAC,cAAA,QAAuB;IAACD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAvBH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,YAAA,MAAmB;;;;;;IAE3CP,EAAA,CAAAC,cAAA,aAA2F;IAErFD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjBH,EAAA,CAAAC,cAAA,cAAyD;IAAxBD,EAAA,CAAAQ,UAAA,sBAAAC,0DAAA;MAAAT,EAAA,CAAAU,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAZ,EAAA,CAAAa,aAAA;MAAA,OAAYb,EAAA,CAAAc,WAAA,CAAAF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IACtDf,EAAA,CAAAC,cAAA,aAAwB;IACAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACtCH,EAAA,CAAAgB,SAAA,eAA0F;IAC5FhB,EAAA,CAAAG,YAAA,EAAM;IAKNH,EAAA,CAAAC,cAAA,aAAsB;IAGMD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACvCH,EAAA,CAAAgB,SAAA,iBAA0F;IAC5FhB,EAAA,CAAAG,YAAA,EAAM;IAERH,EAAA,CAAAC,cAAA,cAAiB;IAEUD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACzCH,EAAA,CAAAgB,SAAA,iBAA4F;IAC9FhB,EAAA,CAAAG,YAAA,EAAM;IAGVH,EAAA,CAAAC,cAAA,cAAwB;IACOD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC9CH,EAAA,CAAAgB,SAAA,iBAA+F;IACjGhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAwB;IACQD,EAAA,CAAAE,MAAA,gCAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC9DH,EAAA,CAAAgB,SAAA,iBAAiG;IACnGhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAwB;IACGD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACrCH,EAAA,CAAAgB,SAAA,iBAAuF;IACzFhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAwB;IACID,EAAA,CAAAE,MAAA,aAAK;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACvCH,EAAA,CAAAgB,SAAA,iBAAyF;IAC3FhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAwB;IACED,EAAA,CAAAE,MAAA,gBAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACxCH,EAAA,CAAAgB,SAAA,iBAAqF;IACvFhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,eAAwB;IACtBD,EAAA,CAAAgB,SAAA,iBAAqG;IACrGhB,EAAA,CAAAC,cAAA,iBAAqD;IAAAD,EAAA,CAAAE,MAAA,8BAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAErFH,EAAA,CAAAC,cAAA,cAAwB;IACAD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACvCH,EAAA,CAAAC,cAAA,kBAAsE;IACzCD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC9CH,EAAA,CAAAC,cAAA,kBAAqB;IAAAD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAGtCH,EAAA,CAAAC,cAAA,cAAwB;IACMD,EAAA,CAAAE,MAAA,uBAAe;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACnDH,EAAA,CAAAgB,SAAA,iBAA6F;IAC/FhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAwB;IACED,EAAA,CAAAE,MAAA,mBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC3CH,EAAA,CAAAgB,SAAA,iBAAqF;IACvFhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAwB;IACLD,EAAA,CAAAE,MAAA,WAAG;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC5BH,EAAA,CAAAgB,SAAA,iBAAuE;IACzEhB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAgB,SAAA,UAAI;IACJhB,EAAA,CAAAC,cAAA,kBAA+E;IAAAD,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAnE1FH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAiB,UAAA,cAAAC,MAAA,CAAAC,YAAA,CAA0B;IAmEgBnB,EAAA,CAAAI,SAAA,IAAgC;IAAhCJ,EAAA,CAAAiB,UAAA,cAAAC,MAAA,CAAAC,YAAA,CAAAC,KAAA,CAAgC;;;ADxEpF,MAKaC,iBAAiB;EAqB5BC,YAAoBC,YAA0B,EAAUC,WAAwB;IAA5D,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,WAAW,GAAXA,WAAW;IApBnE,KAAAjB,YAAY,GAAW,EAAE;IACzB,KAAAkB,WAAW,GAAG,KAAK,CAAC,CAAE;IAGtB,KAAAC,QAAQ,GAAkB,IAAI;IAC9B,KAAAC,KAAK,GAAkB,IAAI;IAC3B,KAAAC,UAAU,GAAkB,IAAI;IAChC,KAAAC,SAAS,GAAkB,IAAI;IAC/B,KAAAC,OAAO,GAAY;MACjBC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;KACV;IAED,KAAAC,IAAI,GAAc,EAAE,CAAC,CAAC;IACtB,KAAAC,cAAc,GAA8B,EAAE,CAAC,CAAC;IAChD,KAAAC,WAAW,GAAW,CAAC,CAAC,CAAC;EAE2D;;EAEpFC,QAAQA,CAAA;IACN,IAAI,CAACb,QAAQ,GAAGc,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAChD,IAAI,CAACb,UAAU,GAAGY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,IAAI,CAACZ,SAAS,GAAGW,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAClD,IAAI,CAACX,OAAO,CAACG,IAAI,GAAGO,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;IACtD,IAAI,CAACX,OAAO,CAACC,MAAM,GAAGS,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;IAC5D,IAAI,CAACX,OAAO,CAACE,SAAS,GAAGQ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE;IAChE,IAAI,CAACX,OAAO,CAACK,OAAO,GAAGK,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE;IAC5D,IAAI,CAACX,OAAO,CAACI,KAAK,GAAGM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAExD;IACA,IAAI,CAACL,IAAI,GAAG,IAAI,CAACZ,WAAW,CAACkB,OAAO,EAAE;IACtC,IAAI,CAACL,cAAc,GAAG,IAAI,CAACb,WAAW,CAACmB,iBAAiB,EAAE;IAC1D,IAAI,CAACL,WAAW,GAAG,IAAI,CAACd,WAAW,CAACoB,aAAa,EAAE;IAEnD,IAAI,CAACzB,YAAY,GAAG,IAAItB,SAAS,CAAC;MAChC6B,QAAQ,EAAE,IAAI5B,WAAW,CAAC;QAAE+C,KAAK,EAAE,IAAI,CAACnB,QAAQ;QAAEoB,QAAQ,EAAE;MAAI,CAAE,CAAC;MACnEC,QAAQ,EAAE,IAAIjD,WAAW,CAAC;QAAE+C,KAAK,EAAE,IAAI,CAAChB,SAAS;QAAEiB,QAAQ,EAAE;MAAI,CAAE,CAAC;MACpEE,SAAS,EAAE,IAAIlD,WAAW,CAAC;QAAE+C,KAAK,EAAE,IAAI,CAACjB,UAAU;QAAEkB,QAAQ,EAAE;MAAI,CAAE,CAAC;MACtEG,eAAe,EAAE,IAAInD,WAAW,CAAC,IAAI,CAACgC,OAAO,CAACC,MAAM,EAAEhC,UAAU,CAACmD,QAAQ,CAAC;MAC1EC,gBAAgB,EAAE,IAAIrD,WAAW,CAAC,IAAI,CAACgC,OAAO,CAACE,SAAS,CAAC;MACzDoB,WAAW,EAAE,IAAItD,WAAW,CAAC,IAAI,CAACgC,OAAO,CAACG,IAAI,EAAElC,UAAU,CAACmD,QAAQ,CAAC;MACpEG,YAAY,EAAE,IAAIvD,WAAW,CAAC,IAAI,CAACgC,OAAO,CAACI,KAAK,EAAEnC,UAAU,CAACmD,QAAQ,CAAC;MACtEI,UAAU,EAAE,IAAIxD,WAAW,CAAC,IAAI,CAACgC,OAAO,CAACK,OAAO,EAAEpC,UAAU,CAACmD,QAAQ,CAAC;MACtEK,cAAc,EAAE,IAAIzD,WAAW,CAAC,KAAK,CAAC;MACtC0D,cAAc,EAAE,IAAI1D,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACmD,QAAQ,CAAC;MACxDO,QAAQ,EAAE,IAAI3D,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACmD,QAAQ,CAAC;MAClDQ,UAAU,EAAE,IAAI5D,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACmD,QAAQ,CAAC;MACpDS,GAAG,EAAE,IAAI7D,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACmD,QAAQ,EAAEnD,UAAU,CAAC6D,SAAS,CAAC,CAAC,CAAC,EAAE7D,UAAU,CAAC8D,SAAS,CAAC,CAAC,CAAC,CAAC;KACjG,CAAC;EACJ;EAEA9C,QAAQA,CAAA;IACN,IAAI,IAAI,CAACI,YAAY,CAACC,KAAK,EAAE;MAC3B,MAAM0C,SAAS,GAAG,IAAI,CAAC3C,YAAY,CAAC0B,KAAK;MAEzC;MACA,MAAMkB,oBAAoB,GAAG;QAC3BrC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBsB,SAAS,EAAE,IAAI,CAACpB,UAAU;QAC1BmB,QAAQ,EAAE,IAAI,CAAClB,SAAS;QACxBC,OAAO,EAAE;UACPC,MAAM,EAAE+B,SAAS,CAACb,eAAe;UACjCjB,SAAS,EAAE8B,SAAS,CAACX,gBAAgB;UACrClB,IAAI,EAAE6B,SAAS,CAACV,WAAW;UAC3BlB,KAAK,EAAE4B,SAAS,CAACT,YAAY;UAC7BlB,OAAO,EAAE2B,SAAS,CAACR;SACpB;QACDU,UAAU,EAAEF,SAAS,CAACN,cAAc;QACpCC,QAAQ,EAAEK,SAAS,CAACL,QAAQ;QAC5BC,UAAU,EAAEI,SAAS,CAACJ,UAAU;QAChCC,GAAG,EAAEG,SAAS,CAACH,GAAG;QAClBM,WAAW,EAAE,IAAI,CAAC7B,IAAI,CAAC8B,GAAG,CAACC,OAAO,KAAK;UACrCC,SAAS,EAAED,OAAO,CAACC,SAAS;UAC5BC,KAAK,EAAEF,OAAO,CAACE,KAAK;UACpBC,QAAQ,EAAE,IAAI,CAACjC,cAAc,CAAC8B,OAAO,CAACC,SAAS;SAChD,CAAC,CAAC;QACH9B,WAAW,EAAE,IAAI,CAACA;OACnB,CAAC,CAAC;MAEH;MACA,MAAMiC,gBAAgB,GAAGT,SAAS,CAACP,cAAc;MAEjD;MACA,IAAIgB,gBAAgB,EAAE;QACpB,MAAMC,WAAW,GAAG;UAClB9C,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBuB,eAAe,EAAEa,SAAS,CAACb,eAAe;UAC1CE,gBAAgB,EAAEW,SAAS,CAACX,gBAAgB;UAC5CC,WAAW,EAAEU,SAAS,CAACV,WAAW;UAClCC,YAAY,EAAES,SAAS,CAACT,YAAY;UACpCC,UAAU,EAAEQ,SAAS,CAACR;SACvB;QAED,IAAI,CAAC/B,YAAY,CAACkD,aAAa,CAACD,WAAW,CAAC,CAACE,SAAS,CACpDC,QAAQ,IAAG;UACTC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;UACpD,IAAI,CAACC,uBAAuB,CAACf,oBAAoB,CAAC;QACpD,CAAC,EACDgB,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAC9D;OACF,MAAM;QACL;QACA,IAAI,CAACD,uBAAuB,CAACf,oBAAoB,CAAC;;;EAGxD;EAEA;EACQe,uBAAuBA,CAAChB,SAAc;IAC5C,IAAI,CAACvC,YAAY,CAACyD,WAAW,CAAClB,SAAS,CAAC,CAACY,SAAS,CAChDC,QAAQ,IAAG;MACT,IAAI,CAACnD,WAAW,CAACyD,SAAS,EAAE;MAC5B,IAAI,CAACxD,WAAW,GAAG,IAAI,CAAC,CAAC;MACzB,IAAI,CAAClB,YAAY,GAAG,iDAAiDoE,QAAQ,CAACO,OAAO,EAAE;IACzF,CAAC,EACDH,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC,CAC9E;EACH;;AAzHW1D,iBAAiB,C;mBAAjBA,iBAAiB,EAAArB,EAAA,CAAAmF,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAArF,EAAA,CAAAmF,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAjBlE,iBAAiB,C;QAAjBA,iBAAiB;EAAAmE,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX9B9F,EAAA,CAAAC,cAAA,WAAM;MAEGD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAG9BH,EAAA,CAAAC,cAAA,WAAM;MACJD,EAAA,CAAAgG,UAAA,IAAAC,8BAAA,eAA+C;MAE/CjG,EAAA,CAAAgG,UAAA,IAAAE,gCAAA,kBAwEM;MACRlG,EAAA,CAAAG,YAAA,EAAO;;;MA3EDH,EAAA,CAAAI,SAAA,GAAiB;MAAjBJ,EAAA,CAAAiB,UAAA,SAAA8E,GAAA,CAAAtE,WAAA,CAAiB;MAEkDzB,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAAiB,UAAA,UAAA8E,GAAA,CAAAtE,WAAA,CAAkB;;;;;;SDG9EJ,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
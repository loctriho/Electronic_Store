{"ast":null,"code":"import { filter } from 'rxjs';\nimport { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/product.service\";\nimport * as i2 from \"../service/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../pagination/pagination.component\";\nfunction ProductListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"img\", 4);\n    i0.ɵɵelementStart(2, \"h5\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ProductListComponent_div_1_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const product_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addToCart(product_r1));\n    });\n    i0.ɵɵtext(8, \"Add to cart\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"h3\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", product_r1.productName);\n    i0.ɵɵproperty(\"src\", product_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.productName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.description);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", product_r1.price, \" USD\");\n  }\n}\nclass ProductListComponent {\n  constructor(productService, cartService, router) {\n    this.productService = productService;\n    this.cartService = cartService;\n    this.router = router;\n    this.apiURL = \"http://localhost:8080/\";\n    this.currentPage = 1; // <-- Add this property here\n    this.itemsPerPage = 10; // If you're also using itemsPerPage \n    this.products = [];\n    this.productQuantities = {}; // Object to store product quantities\n  }\n\n  ngOnInit() {\n    // Initial load of products\n    this.productService.getProducts(0).subscribe(data => {\n      this.products = data;\n    });\n    // Subscribe to categorySelected\n    this.categorySubscription = this.productService.categorySelected$.subscribe(category => {\n      if (category === 'All') {\n        this.productService.getProducts(0).subscribe(data => {\n          this.products = data;\n        });\n      } else {\n        this.productService.getProductsByCategory(category, 0).subscribe(data => {\n          this.products = data;\n        });\n      }\n    });\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      console.log(\"Product List Page\");\n      // Refresh username\n      if (event.url === '/' || event.url === '') {\n        this.productService.getProducts(0).subscribe(data => {\n          this.products = data;\n        });\n        // Execute some code here if navigated to home page\n      }\n      // // Emit hideProductList\n      // if (this.username) {\n      //   this.userLoggedIn.emit();\n      //   // Execute some code here when username exists\n      // }\n    });\n  }\n\n  addToCart(product) {\n    this.cartService.addProduct(product);\n  }\n  onPageChange(page) {\n    this.currentPage = page;\n    // Check for selected category and load products accordingly\n    let currentCategory = this.productService.getCurrentCategory();\n    alert(currentCategory);\n    if (currentCategory === 'All') {\n      this.productService.getProducts(this.currentPage - 1).subscribe(data => {\n        this.products = data.content;\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\n      });\n    } else {\n      this.productService.getProductsByCategory(currentCategory, this.currentPage - 1).subscribe(data => {\n        this.products = data.content;\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\n      });\n    }\n  }\n}\n\nProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n  return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.Router));\n};\nProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductListComponent,\n  selectors: [[\"app-product-list\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"justify-content\", \"space-between\"], [\"style\", \"flex: 0 0 calc(33.333% - 20px); box-sizing: border-box; margin: 10px; background: #f9f9f9; padding: 20px; border: 1px solid #ddd; border-radius: 5px;\", 4, \"ngFor\", \"ngForOf\"], [3, \"pageChanged\"], [2, \"flex\", \"0 0 calc(33.333% - 20px)\", \"box-sizing\", \"border-box\", \"margin\", \"10px\", \"background\", \"#f9f9f9\", \"padding\", \"20px\", \"border\", \"1px solid #ddd\", \"border-radius\", \"5px\"], [2, \"width\", \"100%\", 3, \"src\", \"alt\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"align-items\", \"center\"], [3, \"click\"]],\n  template: function ProductListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ProductListComponent_div_1_Template, 11, 5, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-pagination\", 2);\n      i0.ɵɵlistener(\"pageChanged\", function ProductListComponent_Template_app_pagination_pageChanged_2_listener($event) {\n        return ctx.onPageChange($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.products);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.PaginationComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ProductListComponent };","map":{"version":3,"names":["filter","NavigationEnd","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProductListComponent_div_1_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r3","product_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","addToCart","ɵɵadvance","ɵɵpropertyInterpolate","productName","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵtextInterpolate","description","ɵɵtextInterpolate1","price","ProductListComponent","constructor","productService","cartService","router","apiURL","currentPage","itemsPerPage","products","productQuantities","ngOnInit","getProducts","subscribe","data","categorySubscription","categorySelected$","category","getProductsByCategory","events","pipe","event","console","log","url","product","addProduct","onPageChange","page","currentCategory","getCurrentCategory","alert","content","ɵɵdirectiveInject","i1","ProductService","i2","CartService","i3","Router","selectors","decls","vars","consts","template","ProductListComponent_Template","rf","ctx","ɵɵtemplate","ProductListComponent_div_1_Template","ProductListComponent_Template_app_pagination_pageChanged_2_listener","$event"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\AngularProject\\my-app\\src\\app\\product-list\\product-list.component.ts","C:\\Users\\msitr\\OneDrive\\Desktop\\AngularProject\\my-app\\src\\app\\product-list\\product-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../service/product.service';\nimport { Product } from '../models/product.model';\nimport { CartService } from '../service/cart.service';\nimport { Subscription, filter } from 'rxjs';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  apiURL = \"http://localhost:8080/\"\n  currentPage = 1; // <-- Add this property here\n  itemsPerPage = 10; // If you're also using itemsPerPage \n  products: Product[] = [];\n  productQuantities: { [key: number]: number } = {}; // Object to store product quantities\n  categorySubscription!: Subscription;\n\n\n  constructor(\n    private productService: ProductService,\n    private cartService: CartService,\n    private router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n\n    // Initial load of products\n    this.productService.getProducts(0).subscribe(data => {\n      this.products = data;\n    });\n\n    // Subscribe to categorySelected\n    this.categorySubscription = this.productService.categorySelected$.subscribe((category: string) => {\n      if (category === 'All') {\n        this.productService.getProducts(0).subscribe(data => {\n          this.products = data;\n        });\n      } else {\n        this.productService.getProductsByCategory(category,0).subscribe(data => {\n          this.products = data;\n        });\n      }\n    });\n\n\n    this.router.events.pipe(\n      filter((event): event is NavigationEnd => event instanceof NavigationEnd)\n    ).subscribe((event: NavigationEnd) => {\n      console.log(\"Product List Page\");\n      // Refresh username\n      if (event.url === '/' || event.url === '') {\n        this.productService.getProducts(0).subscribe(data => {\n          this.products = data;\n        });\n        // Execute some code here if navigated to home page\n      }\n    \n\n      // // Emit hideProductList\n      // if (this.username) {\n      //   this.userLoggedIn.emit();\n      //   // Execute some code here when username exists\n      // }\n        \n\n    });\n    \n  }\n\n  addToCart(product: Product): void {\n    this.cartService.addProduct(product);\n  }\n\n  \n\n  onPageChange(page: number) {\n    this.currentPage = page;\n    \n    // Check for selected category and load products accordingly\n    let  currentCategory = this.productService.getCurrentCategory();\n    alert(currentCategory);\n    \n    if (currentCategory === 'All') {\n      this.productService.getProducts(this.currentPage - 1).subscribe(data => { // Page number starts from 0 in the backend\n        this.products = data.content;\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\n      });\n    } else {\n      this.productService.getProductsByCategory(currentCategory, this.currentPage - 1).subscribe(data => {\n        this.products = data.content;\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\n      });\n    }\n  }\n  \n  \n}\n","<div style=\"display: flex; flex-wrap: wrap; justify-content: space-between;\">\n  <div style=\"flex: 0 0 calc(33.333% - 20px); box-sizing: border-box; margin: 10px; background: #f9f9f9; padding: 20px; border: 1px solid #ddd; border-radius: 5px;\" *ngFor=\"let product of products\">\n    <img [src]=\"product.image\" alt=\"{{ product.productName }}\" style=\"width: 100%;\">\n    <h5>{{ product.productName }}</h5>\n    <p>{{ product.description }}</p>\n    <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n \n      <button (click)=\"addToCart(product)\">Add to cart</button>\n      <h3>{{ product.price }} USD</h3>\n    </div>\n  </div>\n</div>\n<app-pagination \n\n  (pageChanged)=\"onPageChange($event)\">\n</app-pagination>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = 'http://localhost:8080'; // Replace with your Spring Boot backend API base URL\n    this.categorySelectedSubject = new BehaviorSubject('All');\n    this.categorySelected$ = this.categorySelectedSubject.asObservable();\n  }\n  getProducts() {\n    return this.http.get(`${this.BASE_URL}/products`);\n  }\n  getProductsByCategory(category) {\n    return this.http.get(`${this.BASE_URL}/products?category=${category}`);\n  }\n  setSelectedCategory(category) {\n    this.categorySelectedSubject.next(category);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductService };","map":{"version":3,"names":["BehaviorSubject","ProductService","constructor","http","BASE_URL","categorySelectedSubject","categorySelected$","asObservable","getProducts","get","getProductsByCategory","category","setSelectedCategory","next","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\AngularProject\\my-app\\src\\app\\service\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private BASE_URL = 'http://localhost:8080';  // Replace with your Spring Boot backend API base URL\r\n\r\n  private categorySelectedSubject: BehaviorSubject<string> = new BehaviorSubject<string>('All');\r\n  public categorySelected$: Observable<string> = this.categorySelectedSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.BASE_URL}/products`);\r\n  }\r\n\r\n  getProductsByCategory(category: string): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.BASE_URL}/products?category=${category}`);\r\n  }\r\n  \r\n\r\n  setSelectedCategory(category: string): void {\r\n    this.categorySelectedSubject.next(category);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,eAAe,QAAQ,MAAM;;;AAGlD,MAGaC,cAAc;EAMzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,QAAQ,GAAG,uBAAuB,CAAC,CAAE;IAErC,KAAAC,uBAAuB,GAA4B,IAAIL,eAAe,CAAS,KAAK,CAAC;IACtF,KAAAM,iBAAiB,GAAuB,IAAI,CAACD,uBAAuB,CAACE,YAAY,EAAE;EAElD;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAY,GAAG,IAAI,CAACL,QAAQ,WAAW,CAAC;EAC9D;EAEAM,qBAAqBA,CAACC,QAAgB;IACpC,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAY,GAAG,IAAI,CAACL,QAAQ,sBAAsBO,QAAQ,EAAE,CAAC;EACnF;EAGAC,mBAAmBA,CAACD,QAAgB;IAClC,IAAI,CAACN,uBAAuB,CAACQ,IAAI,CAACF,QAAQ,CAAC;EAC7C;;AAnBWV,cAAc,C;mBAAdA,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdhB,cAAc,C;SAAdA,cAAc;EAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPnB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
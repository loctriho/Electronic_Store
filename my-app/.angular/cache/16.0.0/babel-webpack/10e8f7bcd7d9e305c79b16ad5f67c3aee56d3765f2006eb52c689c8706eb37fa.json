{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter } from '@angular/core';\nlet PaginationComponent = class PaginationComponent {\n  constructor(http, productService) {\n    this.http = http;\n    this.productService = productService;\n    this.apiUrl_all = \"http://localhost:8080/products/count\";\n    this.apiUrl_category = \"http://localhost:8080/products/{categoryType}/count\";\n    this.itemsPerPage = 10;\n    this.currentPage = 1;\n    this.pageChanged = new EventEmitter();\n    this.totalItems = 0;\n  }\n  ngOnInit() {\n    this.fetchTotalItems();\n  }\n  fetchTotalItems() {\n    let currentCategory = this.productService.getCurrentCategory();\n    let apiUrl = currentCategory && currentCategory !== \"All\" ? this.apiUrl_category.replace('{categoryType}', currentCategory) : this.apiUrl_all;\n    this.http.get(apiUrl).subscribe(response => {\n      this.totalItems = response.totalCount;\n    });\n  }\n  get totalPages() {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.pageChanged.emit(this.currentPage);\n    }\n  }\n  prevPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.pageChanged.emit(this.currentPage);\n    }\n  }\n};\n__decorate([Output()], PaginationComponent.prototype, \"pageChanged\", void 0);\nPaginationComponent = __decorate([Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})], PaginationComponent);\nexport { PaginationComponent };","map":{"version":3,"names":["Component","Output","EventEmitter","PaginationComponent","constructor","http","productService","apiUrl_all","apiUrl_category","itemsPerPage","currentPage","pageChanged","totalItems","ngOnInit","fetchTotalItems","currentCategory","getCurrentCategory","apiUrl","replace","get","subscribe","response","totalCount","totalPages","Math","ceil","nextPage","emit","prevPage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\AngularProject\\my-app\\src\\app\\pagination\\pagination.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ProductService } from 'path_to_your_product_service'; // Update this import path\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n  apiUrl_all: string = \"http://localhost:8080/products/count\";\n  apiUrl_category: string = \"http://localhost:8080/products/{categoryType}/count\";\n  itemsPerPage: number = 10;\n  currentPage: number = 1;\n  @Output() pageChanged = new EventEmitter<number>();\n\n  totalItems: number = 0;\n\n  constructor(private http: HttpClient, private productService: ProductService) {}\n\n  ngOnInit() {\n    this.fetchTotalItems();\n  }\n\n  fetchTotalItems() {\n    let currentCategory = this.productService.getCurrentCategory();\n    let apiUrl = (currentCategory && currentCategory !== \"All\") ? \n                 this.apiUrl_category.replace('{categoryType}', currentCategory) : \n                 this.apiUrl_all;\n\n    this.http.get<any>(apiUrl).subscribe(response => {\n      this.totalItems = response.totalCount;\n    });\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n      this.pageChanged.emit(this.currentPage);\n    }\n  }\n\n  prevPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.pageChanged.emit(this.currentPage);\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAASC,MAAM,EAAEC,YAAY,QAAgB,eAAe;AAS9E,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAS9BC,YAAoBC,IAAgB,EAAUC,cAA8B;IAAxD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,cAAc,GAAdA,cAAc;IAR5D,KAAAC,UAAU,GAAW,sCAAsC;IAC3D,KAAAC,eAAe,GAAW,qDAAqD;IAC/E,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,WAAW,GAAW,CAAC;IACb,KAAAC,WAAW,GAAG,IAAIT,YAAY,EAAU;IAElD,KAAAU,UAAU,GAAW,CAAC;EAEyD;EAE/EC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,IAAIC,eAAe,GAAG,IAAI,CAACT,cAAc,CAACU,kBAAkB,EAAE;IAC9D,IAAIC,MAAM,GAAIF,eAAe,IAAIA,eAAe,KAAK,KAAK,GAC7C,IAAI,CAACP,eAAe,CAACU,OAAO,CAAC,gBAAgB,EAAEH,eAAe,CAAC,GAC/D,IAAI,CAACR,UAAU;IAE5B,IAAI,CAACF,IAAI,CAACc,GAAG,CAAMF,MAAM,CAAC,CAACG,SAAS,CAACC,QAAQ,IAAG;MAC9C,IAAI,CAACT,UAAU,GAAGS,QAAQ,CAACC,UAAU;IACvC,CAAC,CAAC;EACJ;EAEA,IAAIC,UAAUA,CAAA;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACb,UAAU,GAAG,IAAI,CAACH,YAAY,CAAC;EACvD;EAEAiB,QAAQA,CAAA;IACN,IAAI,IAAI,CAAChB,WAAW,GAAG,IAAI,CAACa,UAAU,EAAE;MACtC,IAAI,CAACb,WAAW,EAAE;MAClB,IAAI,CAACC,WAAW,CAACgB,IAAI,CAAC,IAAI,CAACjB,WAAW,CAAC;;EAE3C;EAEAkB,QAAQA,CAAA;IACN,IAAI,IAAI,CAAClB,WAAW,GAAG,CAAC,EAAE;MACxB,IAAI,CAACA,WAAW,EAAE;MAClB,IAAI,CAACC,WAAW,CAACgB,IAAI,CAAC,IAAI,CAACjB,WAAW,CAAC;;EAE3C;CACD;AAtCWmB,UAAA,EAAT5B,MAAM,EAAE,C,uDAA0C;AALxCE,mBAAmB,GAAA0B,UAAA,EAL/B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW7B,mBAAmB,CA2C/B;SA3CYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
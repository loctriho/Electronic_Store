{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \"Invalid username or password\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass LoginComponent {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.userLoggedIn = new EventEmitter();\n    this.serverUrl = 'http://localhost:8080';\n    this.googleLoginUrl = `${this.serverUrl}/oauth2/authorization/google`;\n    this.facebookLoginUrl = `${this.serverUrl}/oauth2/authorization/facebook`;\n    this.loginError = false; // <-- Add this line\n  }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl(''),\n      password: new FormControl('')\n    });\n  }\n  onSubmit() {\n    const usernameControl = this.loginForm.get('username');\n    const passwordControl = this.loginForm.get('password');\n    // Check that the form controls exist before trying to access their value\n    if (usernameControl && passwordControl) {\n      const username = usernameControl.value;\n      const password = passwordControl.value;\n      const endpointUrl = `${this.serverUrl}/login`;\n      const authHeader = 'Basic ' + btoa(`${username}:${password}`);\n      const authHeaders = new HttpHeaders({\n        'Authorization': authHeader\n      });\n      this.httpClient.post(endpointUrl, null, {\n        headers: authHeaders,\n        withCredentials: true\n      }).subscribe(response => {\n        console.log(response);\n        // Store CSRF token and user info in localStorage\n        localStorage.setItem('csrfToken', response.csrfToken);\n        localStorage.setItem('username', username);\n        localStorage.setItem('password', password);\n        localStorage.setItem('email', response.email);\n        localStorage.setItem('first_name', response.first_name);\n        localStorage.setItem('last_name', response.last_name);\n        // Store address info in localStorage\n        if (response.address) {\n          localStorage.setItem('city', response.address.city || '');\n          localStorage.setItem('streetNo', response.address.street || '');\n          localStorage.setItem('apartment', response.address.apartment || '');\n          localStorage.setItem('zipCode', response.address.zipCode || '');\n          localStorage.setItem('state', response.address.state || '');\n        }\n        console.log('Login Successful:', response);\n        this.userLoggedIn.emit();\n        // Check if the previous URL exists in localStorage\n        const previousUrl = localStorage.getItem('previous_url');\n        if (previousUrl) {\n          localStorage.removeItem('previous_url');\n          this.router.navigateByUrl(previousUrl);\n        } else {\n          this.router.navigate(['/']); // Navigate to the home page\n        }\n      }, error => {\n        if (error.status === 401) {\n          console.error('Login Error: Invalid username or password');\n          this.loginError = true; // <-- Add this line\n        } else {\n          console.error('Login Error:', error);\n        }\n      });\n    }\n  }\n  signInWithProvider(provider) {\n    let authorizationUrl;\n    const angularRedirectUrl = window.location.href;\n    const state = btoa(angularRedirectUrl); // Base64 encode the original URL\n    if (provider === 'google') {\n      let redirectUri = `${this.serverUrl}/login/oauth2/code/google`;\n      authorizationUrl = `${this.googleLoginUrl}?redirect_uri=${encodeURIComponent(redirectUri)}&state=${encodeURIComponent(state)}`;\n    } else if (provider === 'facebook') {\n      let redirectUri = `${this.serverUrl}/login/oauth2/code/facebook`;\n      authorizationUrl = `${this.facebookLoginUrl}?redirect_uri=${encodeURIComponent(redirectUri)}&state=${encodeURIComponent(state)}`;\n    }\n    if (authorizationUrl) {\n      window.location.href = authorizationUrl;\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  outputs: {\n    userLoggedIn: \"userLoggedIn\"\n  },\n  decls: 17,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, LoginComponent_p_5_Template, 2, 0, \"p\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵtext(16, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n    font-family: Arial, sans-serif;\\r\\n    background-color: #f2f2f2;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n    color: #2d2d2d;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n    background-color: #ffffff;\\r\\n    padding: 20px;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: 0px 0px 10px #cfcfcf;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    padding: 10px;\\r\\n    border-radius: 5px;\\r\\n    border: none;\\r\\n    box-shadow: 0px 0px 5px #cfcfcf;\\r\\n    margin-bottom: 20px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nbutton[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #428bca;\\r\\n    color: #ffffff;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    padding: 10px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\r\\n    background-color: #3071a9;\\r\\n}\\r\\n\\r\\n.oauth2[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n    display: inline-block;\\r\\n    background-color: #ffffff;\\r\\n    border: 1px solid #cfcfcf;\\r\\n    padding: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    cursor: pointer;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.btn-google[_ngcontent-%COMP%] {\\r\\n    color: #db4a39;\\r\\n}\\r\\n\\r\\n.btn-facebook[_ngcontent-%COMP%] {\\r\\n    color: #3b5998;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #f2f2f2;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtJQUM5Qix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsZ0NBQWdDO0lBQ2hDLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7O0lBRUksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osK0JBQStCO0lBQy9CLG1CQUFtQjtJQUNuQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztJQUNkLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG59XHJcblxyXG5oMSB7XHJcbiAgICBjb2xvcjogIzJkMmQyZDtcclxufVxyXG5cclxuZm9ybSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCAjY2ZjZmNmO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxubGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxyXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4ICNjZmNmY2Y7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MjhiY2E7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvblt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMDcxYTk7XHJcbn1cclxuXHJcbi5vYXV0aDIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uYnRuIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2ZjZmNmO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG5cclxuLmJ0bi1nb29nbGUge1xyXG4gICAgY29sb3I6ICNkYjRhMzk7XHJcbn1cclxuXHJcbi5idG4tZmFjZWJvb2sge1xyXG4gICAgY29sb3I6ICMzYjU5OTg7XHJcbn1cclxuXHJcbi5idG46aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["EventEmitter","HttpHeaders","FormGroup","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","httpClient","router","userLoggedIn","serverUrl","googleLoginUrl","facebookLoginUrl","loginError","ngOnInit","loginForm","username","password","onSubmit","usernameControl","get","passwordControl","value","endpointUrl","authHeader","btoa","authHeaders","post","headers","withCredentials","subscribe","response","console","log","localStorage","setItem","csrfToken","email","first_name","last_name","address","city","street","apartment","zipCode","state","emit","previousUrl","getItem","removeItem","navigateByUrl","navigate","error","status","signInWithProvider","provider","authorizationUrl","angularRedirectUrl","window","location","href","redirectUri","encodeURIComponent","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","outputs","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_p_5_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","valid"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\Electronic_Store\\Electronic_Store\\my-app\\src\\app\\login\\login.component.ts","C:\\Users\\msitr\\OneDrive\\Desktop\\Electronic_Store\\Electronic_Store\\my-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Address } from '../models/address.model';\r\n\r\ninterface LoginResponse {\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  address: Address;\r\n  csrfToken: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @Output() userLoggedIn: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  serverUrl = 'http://localhost:8080'; \r\n  googleLoginUrl = `${this.serverUrl}/oauth2/authorization/google`;\r\n  facebookLoginUrl = `${this.serverUrl}/oauth2/authorization/facebook`;\r\n  loginForm!: FormGroup; \r\n  loginError: boolean = false;  // <-- Add this line\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl(''),\r\n      password: new FormControl(''),\r\n    });\r\n  }\r\n  \r\n  onSubmit(): void {\r\n    const usernameControl = this.loginForm.get('username');\r\n    const passwordControl = this.loginForm.get('password');\r\n    \r\n    // Check that the form controls exist before trying to access their value\r\n    if (usernameControl && passwordControl) {\r\n      const username = usernameControl.value;\r\n      const password = passwordControl.value;\r\n  \r\n      const endpointUrl = `${this.serverUrl}/login`;\r\n  \r\n      const authHeader = 'Basic ' + btoa(`${username}:${password}`);\r\n      const authHeaders = new HttpHeaders({ 'Authorization': authHeader });\r\n      this.httpClient.post<LoginResponse>(endpointUrl, null, { headers: authHeaders, withCredentials: true }).subscribe(\r\n        (response: LoginResponse) => {\r\n          console.log(response);\r\n          // Store CSRF token and user info in localStorage\r\n          localStorage.setItem('csrfToken', response.csrfToken);\r\n          localStorage.setItem('username', username);\r\n          localStorage.setItem('password', password);\r\n          localStorage.setItem('email', response.email);\r\n          localStorage.setItem('first_name', response.first_name);\r\n          localStorage.setItem('last_name', response.last_name);\r\n\r\n\r\n  \r\n          // Store address info in localStorage\r\n          if (response.address) {\r\n            localStorage.setItem('city', response.address.city || '');\r\n            localStorage.setItem('streetNo', response.address.street || '');\r\n            localStorage.setItem('apartment', response.address.apartment || '');\r\n            localStorage.setItem('zipCode', response.address.zipCode || '');\r\n            localStorage.setItem('state', response.address.state || '');\r\n\r\n          }\r\n  \r\n          console.log('Login Successful:', response);\r\n          this.userLoggedIn.emit();\r\n  \r\n          // Check if the previous URL exists in localStorage\r\n          const previousUrl = localStorage.getItem('previous_url');\r\n          if (previousUrl) {\r\n            localStorage.removeItem('previous_url');\r\n            this.router.navigateByUrl(previousUrl);\r\n          } else {\r\n            this.router.navigate(['/']); // Navigate to the home page\r\n          }\r\n        },\r\n        (error: any) => {\r\n          if (error.status === 401) {\r\n            console.error('Login Error: Invalid username or password');\r\n            this.loginError = true;  // <-- Add this line\r\n          } else {\r\n            console.error('Login Error:', error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  signInWithProvider(provider: string) {\r\n    let authorizationUrl;\r\n    const angularRedirectUrl = window.location.href;\r\n    const state = btoa(angularRedirectUrl);  // Base64 encode the original URL\r\n    \r\n    if (provider === 'google') {\r\n      let redirectUri = `${this.serverUrl}/login/oauth2/code/google`;\r\n      authorizationUrl = `${this.googleLoginUrl}?redirect_uri=${encodeURIComponent(redirectUri)}&state=${encodeURIComponent(state)}`;\r\n    } else if (provider === 'facebook') {\r\n      let redirectUri = `${this.serverUrl}/login/oauth2/code/facebook`;\r\n      authorizationUrl = `${this.facebookLoginUrl}?redirect_uri=${encodeURIComponent(redirectUri)}&state=${encodeURIComponent(state)}`;\r\n    }\r\n  \r\n    if (authorizationUrl) {\r\n      window.location.href = authorizationUrl;\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-3\">\r\n      <h2>Login</h2>\r\n\r\n      <!-- Display the error message if loginError is true -->\r\n      <p *ngIf=\"loginError\" class=\"alert alert-danger\">Invalid username or password</p>\r\n\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" required>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Submit</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { filter } from 'rxjs';\nimport { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/product.service\";\nimport * as i2 from \"../service/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../pagination/pagination.component\";\nfunction ProductListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"img\", 4);\n    i0.ɵɵelementStart(2, \"h5\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ProductListComponent_div_3_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const product_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addToCart(product_r1));\n    });\n    i0.ɵɵtext(8, \"Add to cart\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"h3\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", product_r1.productName);\n    i0.ɵɵproperty(\"src\", product_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.productName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.description);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", product_r1.price, \" USD\");\n  }\n}\nclass ProductListComponent {\n  constructor(productService, cartService, router) {\n    this.productService = productService;\n    this.cartService = cartService;\n    this.router = router;\n    this.apiURL = \"http://localhost:8080/\";\n    this.currentPage = 1; // <-- Add this property here\n    this.itemsPerPage = 10; // If you're also using itemsPerPage \n    this.products = [];\n    this.productQuantities = {}; // Object to store product quantities\n    this.currentCategory = '';\n  }\n  ngOnInit() {\n    // Initial load of products\n    this.productService.getProducts(0).subscribe(data => {\n      this.products = data;\n    });\n    // Subscribe to categorySelected\n    this.categorySubscription = this.productService.categorySelected$.subscribe(category => {\n      this.currentCategory = category; // Set the current category here\n      if (category === 'All') {\n        this.productService.getProducts(0).subscribe(data => {\n          this.products = data;\n        });\n      } else {\n        this.productService.getProductsByCategory(category, 0).subscribe(data => {\n          this.products = data;\n        });\n      }\n    });\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      // Refresh username\n      if (event.url === '/' || event.url === '') {\n        this.productService.getProducts(0).subscribe(data => {\n          this.products = data;\n        });\n        // Execute some code here if navigated to home page\n      }\n      // // Emit hideProductList\n      // if (this.username) {\n      //   this.userLoggedIn.emit();\n      //   // Execute some code here when username exists\n      // }\n    });\n  }\n\n  addToCart(product) {\n    this.cartService.addProduct(product);\n  }\n  onPageChange(page) {\n    this.currentPage = page;\n    // Check for selected category and load products accordingly\n    let currentCategory = this.productService.getCurrentCategory();\n    if (currentCategory === 'All') {\n      this.productService.getProducts(this.currentPage - 1).subscribe(data => {\n        this.products = data;\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\n      });\n    } else {\n      this.productService.getProductsByCategory(currentCategory, this.currentPage - 1).subscribe(data => {\n        this.products = data;\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\n      });\n    }\n  }\n}\n\nProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n  return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.Router));\n};\nProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductListComponent,\n  selectors: [[\"app-product-list\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"justify-content\", \"space-between\"], [\"style\", \"flex: 0 0 calc(33.333% - 20px); box-sizing: border-box; margin: 10px; background: #f9f9f9; padding: 20px; border: 1px solid #ddd; border-radius: 5px;\", 4, \"ngFor\", \"ngForOf\"], [3, \"pageChanged\"], [2, \"flex\", \"0 0 calc(33.333% - 20px)\", \"box-sizing\", \"border-box\", \"margin\", \"10px\", \"background\", \"#f9f9f9\", \"padding\", \"20px\", \"border\", \"1px solid #ddd\", \"border-radius\", \"5px\"], [2, \"width\", \"100%\", 3, \"src\", \"alt\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"align-items\", \"center\"], [3, \"click\"]],\n  template: function ProductListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtemplate(3, ProductListComponent_div_3_Template, 11, 5, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"app-pagination\", 2);\n      i0.ɵɵlistener(\"pageChanged\", function ProductListComponent_Template_app_pagination_pageChanged_4_listener($event) {\n        return ctx.onPageChange($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Current Category: \", ctx.currentCategory, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.products);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.PaginationComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ProductListComponent };","map":{"version":3,"names":["filter","NavigationEnd","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProductListComponent_div_3_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r3","product_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","addToCart","ɵɵadvance","ɵɵpropertyInterpolate","productName","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵtextInterpolate","description","ɵɵtextInterpolate1","price","ProductListComponent","constructor","productService","cartService","router","apiURL","currentPage","itemsPerPage","products","productQuantities","currentCategory","ngOnInit","getProducts","subscribe","data","categorySubscription","categorySelected$","category","getProductsByCategory","events","pipe","event","url","product","addProduct","onPageChange","page","getCurrentCategory","ɵɵdirectiveInject","i1","ProductService","i2","CartService","i3","Router","selectors","decls","vars","consts","template","ProductListComponent_Template","rf","ctx","ɵɵtemplate","ProductListComponent_div_3_Template","ProductListComponent_Template_app_pagination_pageChanged_4_listener","$event"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\ElectronicStore2\\Electronic_Store\\front-end\\src\\app\\product-list\\product-list.component.ts","C:\\Users\\msitr\\OneDrive\\Desktop\\ElectronicStore2\\Electronic_Store\\front-end\\src\\app\\product-list\\product-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../service/product.service';\r\nimport { Product } from '../models/product.model';\r\nimport { CartService } from '../service/cart.service';\r\nimport { Subscription, filter } from 'rxjs';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n  apiURL = \"http://localhost:8080/\"\r\n  currentPage = 1; // <-- Add this property here\r\n  itemsPerPage = 10; // If you're also using itemsPerPage \r\n  products: Product[] = [];\r\n  productQuantities: { [key: number]: number } = {}; // Object to store product quantities\r\n  categorySubscription!: Subscription;\r\n  currentCategory: string = '';\r\n\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private cartService: CartService,\r\n    private router: Router\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Initial load of products\r\n    this.productService.getProducts(0).subscribe(data => {\r\n      this.products = data;\r\n    });\r\n\r\n    // Subscribe to categorySelected\r\n    this.categorySubscription = this.productService.categorySelected$.subscribe((category: string) => {\r\n      this.currentCategory = category; // Set the current category here\r\n\r\n      if (category === 'All') {\r\n        this.productService.getProducts(0).subscribe(data => {\r\n          this.products = data;\r\n        });\r\n      } else {\r\n        this.productService.getProductsByCategory(category,0).subscribe(data => {\r\n          this.products = data;\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n    this.router.events.pipe(\r\n      filter((event): event is NavigationEnd => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      // Refresh username\r\n      if (event.url === '/' || event.url === '') {\r\n        this.productService.getProducts(0).subscribe(data => {\r\n          this.products = data;\r\n        });\r\n        // Execute some code here if navigated to home page\r\n      }\r\n    \r\n\r\n      // // Emit hideProductList\r\n      // if (this.username) {\r\n      //   this.userLoggedIn.emit();\r\n      //   // Execute some code here when username exists\r\n      // }\r\n        \r\n\r\n    });\r\n    \r\n  }\r\n\r\n  addToCart(product: Product): void {\r\n    this.cartService.addProduct(product);\r\n  }\r\n\r\n  \r\n\r\n  onPageChange(page: number) {\r\n    this.currentPage = page;\r\n    \r\n    // Check for selected category and load products accordingly\r\n    let  currentCategory = this.productService.getCurrentCategory();\r\n    \r\n    if (currentCategory === 'All') {\r\n      this.productService.getProducts(this.currentPage - 1).subscribe(data => { // Page number starts from 0 in the backend\r\n        this.products = data;\r\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\r\n      });\r\n    } else {\r\n\r\n\r\n      this.productService.getProductsByCategory(currentCategory, this.currentPage - 1).subscribe(data => {\r\n        this.products = data;\r\n        // You might also want to update totalItems here based on the response, for the paginator to work correctly.\r\n      });\r\n    }\r\n  }\r\n  \r\n  \r\n}\r\n","<p>Current Category: {{ this.currentCategory }}</p>\r\n\r\n<div style=\"display: flex; flex-wrap: wrap; justify-content: space-between;\">\r\n  <div style=\"flex: 0 0 calc(33.333% - 20px); box-sizing: border-box; margin: 10px; background: #f9f9f9; padding: 20px; border: 1px solid #ddd; border-radius: 5px;\" *ngFor=\"let product of products\">\r\n    <img [src]=\"product.image\" alt=\"{{ product.productName }}\" style=\"width: 100%;\">\r\n    <h5>{{ product.productName }}</h5>\r\n    <p>{{ product.description }}</p>\r\n    <div style=\"display: flex; justify-content: space-between; align-items: center;\">\r\n \r\n      <button (click)=\"addToCart(product)\">Add to cart</button>\r\n      <h3>{{ product.price }} USD</h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-pagination \r\n\r\n  (pageChanged)=\"onPageChange($event)\">\r\n</app-pagination>\r\n"],"mappings":"AAIA,SAAuBA,MAAM,QAAQ,MAAM;AAC3C,SAASC,aAAa,QAAgB,iBAAiB;;;;;;;;;;ICFrDC,EAAA,CAAAC,cAAA,aAAoM;IAClMD,EAAA,CAAAE,SAAA,aAAgF;IAChFF,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAG,MAAA,GAAyB;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAClCJ,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAG,MAAA,GAAyB;IAAAH,EAAA,CAAAI,YAAA,EAAI;IAChCJ,EAAA,CAAAC,cAAA,aAAiF;IAEvED,EAAA,CAAAK,UAAA,mBAAAC,4DAAA;MAAA,MAAAC,WAAA,GAAAP,EAAA,CAAAQ,aAAA,CAAAC,GAAA;MAAA,MAAAC,UAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAZ,EAAA,CAAAa,aAAA;MAAA,OAASb,EAAA,CAAAc,WAAA,CAAAF,MAAA,CAAAG,SAAA,CAAAL,UAAA,CAAkB;IAAA,EAAC;IAACV,EAAA,CAAAG,MAAA,kBAAW;IAAAH,EAAA,CAAAI,YAAA,EAAS;IACzDJ,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAG,MAAA,IAAuB;IAAAH,EAAA,CAAAI,YAAA,EAAK;;;;IANPJ,EAAA,CAAAgB,SAAA,GAA+B;IAA/BhB,EAAA,CAAAiB,qBAAA,QAAAP,UAAA,CAAAQ,WAAA,CAA+B;IAArDlB,EAAA,CAAAmB,UAAA,QAAAT,UAAA,CAAAU,KAAA,EAAApB,EAAA,CAAAqB,aAAA,CAAqB;IACtBrB,EAAA,CAAAgB,SAAA,GAAyB;IAAzBhB,EAAA,CAAAsB,iBAAA,CAAAZ,UAAA,CAAAQ,WAAA,CAAyB;IAC1BlB,EAAA,CAAAgB,SAAA,GAAyB;IAAzBhB,EAAA,CAAAsB,iBAAA,CAAAZ,UAAA,CAAAa,WAAA,CAAyB;IAItBvB,EAAA,CAAAgB,SAAA,GAAuB;IAAvBhB,EAAA,CAAAwB,kBAAA,KAAAd,UAAA,CAAAe,KAAA,SAAuB;;;ADHjC,MAKaC,oBAAoB;EAW/BC,YACUC,cAA8B,EAC9BC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAZhB,KAAAC,MAAM,GAAG,wBAAwB;IACjC,KAAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IACjB,KAAAC,YAAY,GAAG,EAAE,CAAC,CAAC;IACnB,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,iBAAiB,GAA8B,EAAE,CAAC,CAAC;IAEnD,KAAAC,eAAe,GAAW,EAAE;EAOxB;EAGJC,QAAQA,CAAA;IAEN;IACA,IAAI,CAACT,cAAc,CAACU,WAAW,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAClD,IAAI,CAACN,QAAQ,GAAGM,IAAI;IACtB,CAAC,CAAC;IAEF;IACA,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACb,cAAc,CAACc,iBAAiB,CAACH,SAAS,CAAEI,QAAgB,IAAI;MAC/F,IAAI,CAACP,eAAe,GAAGO,QAAQ,CAAC,CAAC;MAEjC,IAAIA,QAAQ,KAAK,KAAK,EAAE;QACtB,IAAI,CAACf,cAAc,CAACU,WAAW,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;UAClD,IAAI,CAACN,QAAQ,GAAGM,IAAI;QACtB,CAAC,CAAC;OACH,MAAM;QACL,IAAI,CAACZ,cAAc,CAACgB,qBAAqB,CAACD,QAAQ,EAAC,CAAC,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAG;UACrE,IAAI,CAACN,QAAQ,GAAGM,IAAI;QACtB,CAAC,CAAC;;IAEN,CAAC,CAAC;IAGF,IAAI,CAACV,MAAM,CAACe,MAAM,CAACC,IAAI,CACrBhD,MAAM,CAAEiD,KAAK,IAA6BA,KAAK,YAAYhD,aAAa,CAAC,CAC1E,CAACwC,SAAS,CAAEQ,KAAoB,IAAI;MACnC;MACA,IAAIA,KAAK,CAACC,GAAG,KAAK,GAAG,IAAID,KAAK,CAACC,GAAG,KAAK,EAAE,EAAE;QACzC,IAAI,CAACpB,cAAc,CAACU,WAAW,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;UAClD,IAAI,CAACN,QAAQ,GAAGM,IAAI;QACtB,CAAC,CAAC;QACF;;MAIF;MACA;MACA;MACA;MACA;IAGF,CAAC,CAAC;EAEJ;;EAEAzB,SAASA,CAACkC,OAAgB;IACxB,IAAI,CAACpB,WAAW,CAACqB,UAAU,CAACD,OAAO,CAAC;EACtC;EAIAE,YAAYA,CAACC,IAAY;IACvB,IAAI,CAACpB,WAAW,GAAGoB,IAAI;IAEvB;IACA,IAAKhB,eAAe,GAAG,IAAI,CAACR,cAAc,CAACyB,kBAAkB,EAAE;IAE/D,IAAIjB,eAAe,KAAK,KAAK,EAAE;MAC7B,IAAI,CAACR,cAAc,CAACU,WAAW,CAAC,IAAI,CAACN,WAAW,GAAG,CAAC,CAAC,CAACO,SAAS,CAACC,IAAI,IAAG;QACrE,IAAI,CAACN,QAAQ,GAAGM,IAAI;QACpB;MACF,CAAC,CAAC;KACH,MAAM;MAGL,IAAI,CAACZ,cAAc,CAACgB,qBAAqB,CAACR,eAAe,EAAE,IAAI,CAACJ,WAAW,GAAG,CAAC,CAAC,CAACO,SAAS,CAACC,IAAI,IAAG;QAChG,IAAI,CAACN,QAAQ,GAAGM,IAAI;QACpB;MACF,CAAC,CAAC;;EAEN;;;AAzFWd,oBAAoB,C;mBAApBA,oBAAoB,EAAA1B,EAAA,CAAAsD,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAxD,EAAA,CAAAsD,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA1D,EAAA,CAAAsD,iBAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;AAApBlC,oBAAoB,C;QAApBA,oBAAoB;EAAAmC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZjCnE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAG,MAAA,GAA4C;MAAAH,EAAA,CAAAI,YAAA,EAAI;MAEnDJ,EAAA,CAAAC,cAAA,aAA6E;MAC3ED,EAAA,CAAAqE,UAAA,IAAAC,mCAAA,kBASM;MACRtE,EAAA,CAAAI,YAAA,EAAM;MACNJ,EAAA,CAAAC,cAAA,wBAEuC;MAArCD,EAAA,CAAAK,UAAA,yBAAAkE,oEAAAC,MAAA;QAAA,OAAeJ,GAAA,CAAAjB,YAAA,CAAAqB,MAAA,CAAoB;MAAA,EAAC;MACtCxE,EAAA,CAAAI,YAAA,EAAiB;;;MAjBdJ,EAAA,CAAAgB,SAAA,GAA4C;MAA5ChB,EAAA,CAAAwB,kBAAA,uBAAA4C,GAAA,CAAAhC,eAAA,KAA4C;MAG0IpC,EAAA,CAAAgB,SAAA,GAAW;MAAXhB,EAAA,CAAAmB,UAAA,YAAAiD,GAAA,CAAAlC,QAAA,CAAW;;;;;;SDSvLR,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
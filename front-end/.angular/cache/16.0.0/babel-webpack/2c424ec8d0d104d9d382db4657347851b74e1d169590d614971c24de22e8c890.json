{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/user-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" User registered successfully! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nfunction RegisterComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, RegisterComponent_div_10_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.registerForm.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, RegisterComponent_div_15_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.registerForm.get(\"firstName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, RegisterComponent_div_20_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.registerForm.get(\"lastName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, RegisterComponent_div_25_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, RegisterComponent_div_25_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.registerForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r5.registerForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, RegisterComponent_div_30_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, RegisterComponent_div_30_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.registerForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r6.registerForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_35_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_35_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, RegisterComponent_div_35_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, RegisterComponent_div_35_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.registerForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.registerForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"mustMatch\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass RegisterComponent {\n  constructor(formBuilder, userService, router) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.router = router;\n    this.submitted = false;\n    this.errorMessage = null; // Declare a local variable to handle errors\n    this.registrationSuccess = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: this.MustMatch('password', 'confirmPassword')\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.userService.createUserForRegistration(this.registerForm.value).subscribe(data => {\n      console.log(data);\n      // Send a success message to main-content\n      // const successMessage = `${this.registerForm.value.username} has been registered successfully`;\n      // this.userService.changeMessage(successMessage);\n      // Navigate to home page\n      // this.router.navigate(['/']);\n      console.log(data);\n      this.registrationSuccess = true; // Add this line\n    }, error => {\n      console.log(error.error); // Will print: \"Sorry. Username already been taken\"\n      this.errorMessage = error.error; // Stor\n    });\n  }\n\n  onReset() {\n    this.submitted = false;\n    this.registrationSuccess = false;\n    this.registerForm.reset();\n  }\n  MustMatch(controlName, matchingControlName) {\n    return formGroup => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n      if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          mustMatch: 'Passwords do not match'\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 41,\n  vars: 27,\n  consts: [[1, \"container\"], [\"class\", \"success-message\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"username\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"firstName\"], [\"id\", \"firstName\", \"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"lastName\"], [\"id\", \"lastName\", \"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"confirmPassword\"], [\"id\", \"confirmPassword\", \"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"success-message\"], [1, \"error-message\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, RegisterComponent_div_1_Template, 2, 0, \"div\", 1);\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(5, RegisterComponent_div_5_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, RegisterComponent_div_10_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 13);\n      i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 14);\n      i0.ɵɵtext(28, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 15);\n      i0.ɵɵtemplate(30, RegisterComponent_div_30_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 4)(32, \"label\", 16);\n      i0.ɵɵtext(33, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 17);\n      i0.ɵɵtemplate(35, RegisterComponent_div_35_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 4)(37, \"button\", 18);\n      i0.ɵɵtext(38, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_39_listener() {\n        return ctx.onReset();\n      });\n      i0.ɵɵtext(40, \"Reset\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      let tmp_8_0;\n      let tmp_9_0;\n      let tmp_10_0;\n      let tmp_11_0;\n      let tmp_12_0;\n      let tmp_13_0;\n      let tmp_14_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.registrationSuccess);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ((tmp_3_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_3_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_4_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_4_0.invalid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ((tmp_5_0 = ctx.registerForm.get(\"firstName\")) == null ? null : tmp_5_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_6_0 = ctx.registerForm.get(\"firstName\")) == null ? null : tmp_6_0.invalid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ((tmp_7_0 = ctx.registerForm.get(\"lastName\")) == null ? null : tmp_7_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_8_0 = ctx.registerForm.get(\"lastName\")) == null ? null : tmp_8_0.invalid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ((tmp_9_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_9_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_10_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_10_0.invalid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ((tmp_11_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_11_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_12_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_12_0.invalid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ((tmp_13_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_13_0.invalid)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_14_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_14_0.invalid));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","errorMessage","ɵɵtemplate","RegisterComponent_div_10_div_1_Template","ɵɵproperty","tmp_0_0","ctx_r2","registerForm","get","errors","RegisterComponent_div_15_div_1_Template","ctx_r3","RegisterComponent_div_20_div_1_Template","ctx_r4","RegisterComponent_div_25_div_1_Template","RegisterComponent_div_25_div_2_Template","ctx_r5","tmp_1_0","RegisterComponent_div_30_div_1_Template","RegisterComponent_div_30_div_2_Template","ctx_r6","RegisterComponent_div_35_div_1_Template","RegisterComponent_div_35_div_2_Template","ctx_r7","RegisterComponent","constructor","formBuilder","userService","router","submitted","registrationSuccess","ngOnInit","group","username","required","first_name","last_name","email","password","minLength","confirmPassword","validator","MustMatch","onSubmit","invalid","createUserForRegistration","value","subscribe","data","console","log","error","onReset","reset","controlName","matchingControlName","formGroup","control","controls","matchingControl","setErrors","mustMatch","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","i3","Router","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","RegisterComponent_div_1_Template","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_4_listener","RegisterComponent_div_5_Template","ɵɵelement","RegisterComponent_div_10_Template","RegisterComponent_div_15_Template","RegisterComponent_div_20_Template","RegisterComponent_div_25_Template","RegisterComponent_div_30_Template","RegisterComponent_div_35_Template","RegisterComponent_Template_button_click_39_listener","ɵɵpureFunction1","_c0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0","tmp_11_0","tmp_12_0","tmp_13_0","tmp_14_0"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\ElectronicStore2\\Electronic_Store\\my-app\\src\\app\\register\\register.component.ts","C:\\Users\\msitr\\OneDrive\\Desktop\\ElectronicStore2\\Electronic_Store\\my-app\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from '../service/user-service.service';\r\nimport { Router } from '@angular/router'; \r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  submitted = false;\r\n  errorMessage: string | null = null; // Declare a local variable to handle errors\r\n  registrationSuccess = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      first_name: ['', Validators.required],\r\n      last_name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: this.MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.userService.createUserForRegistration(this.registerForm.value).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        // Send a success message to main-content\r\n        // const successMessage = `${this.registerForm.value.username} has been registered successfully`;\r\n        // this.userService.changeMessage(successMessage);\r\n  \r\n        // Navigate to home page\r\n        // this.router.navigate(['/']);\r\n        console.log(data);\r\n        this.registrationSuccess = true; // Add this line\r\n      },\r\n      error => {\r\n        console.log(error.error); // Will print: \"Sorry. Username already been taken\"\r\n        this.errorMessage = error.error; // Stor\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.registrationSuccess = false;\r\n    this.registerForm.reset();\r\n  }\r\n\r\n    MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: 'Passwords do not match' });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n    <div *ngIf=\"registrationSuccess\" class=\"success-message\">\r\n        User registered successfully!\r\n    </div>\r\n    <h1>Register</h1>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n  \r\n      <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n          {{ errorMessage }}\r\n      </div>\r\n      \r\n      <!-- Username -->\r\n      <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.get('username')?.invalid }\" />\r\n          <div *ngIf=\"submitted && registerForm.get('username')?.invalid\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"registerForm.get('username')?.errors?.['required']\">Username is required</div>\r\n          </div>\r\n      </div>\r\n      <!-- First Name -->\r\n      <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name</label>\r\n          <input id=\"firstName\" type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.get('firstName')?.invalid }\" />\r\n          <div *ngIf=\"submitted && registerForm.get('firstName')?.invalid\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"registerForm.get('firstName')?.errors?.['required']\">First Name is required</div>\r\n          </div>\r\n      </div>\r\n      <!-- Last Name -->\r\n      <div class=\"form-group\">\r\n          <label for=\"lastName\">Last Name</label>\r\n          <input id=\"lastName\" type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.get('lastName')?.invalid }\" />\r\n          <div *ngIf=\"submitted && registerForm.get('lastName')?.invalid\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"registerForm.get('lastName')?.errors?.['required']\">Last Name is required</div>\r\n          </div>\r\n      </div>\r\n      <!-- Email -->\r\n      <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input id=\"email\" type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.get('email')?.invalid }\" />\r\n          <div *ngIf=\"submitted && registerForm.get('email')?.invalid\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"registerForm.get('email')?.errors?.['required']\">Email is required</div>\r\n              <div *ngIf=\"registerForm.get('email')?.errors?.['email']\">Email is invalid</div>\r\n          </div>\r\n      </div>\r\n      <!-- Password -->\r\n      <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.get('password')?.invalid }\" />\r\n          <div *ngIf=\"submitted && registerForm.get('password')?.invalid\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"registerForm.get('password')?.errors?.['required']\">Password is required</div>\r\n              <div *ngIf=\"registerForm.get('password')?.errors?.['minlength']\">Password must be at least 6 characters</div>\r\n          </div>\r\n      </div>\r\n      <!-- Confirm Password -->\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">Confirm Password</label>\r\n        <input id=\"confirmPassword\" type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.get('confirmPassword')?.invalid }\" />\r\n        <div *ngIf=\"submitted && registerForm.get('confirmPassword')?.invalid\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.['required']\">Confirm Password is required</div>\r\n            <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.['mustMatch']\">Passwords do not match</div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n    </div>\r\n      <!-- Submit -->\r\n      <div class=\"form-group\">\r\n          <button type=\"submit\" class=\"btn btn-primary mr-2\">Register</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onReset()\">Reset</button>\r\n      </div>\r\n  </form>\r\n  </div>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
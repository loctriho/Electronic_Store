{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction AccountComponent_form_17_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.successMessage);\n  }\n}\nfunction AccountComponent_form_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 8);\n    i0.ɵɵtemplate(1, AccountComponent_form_17_p_1_Template, 2, 1, \"p\", 7);\n    i0.ɵɵelementStart(2, \"div\", 9)(3, \"label\", 10);\n    i0.ɵɵtext(4, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 9)(7, \"label\", 12);\n    i0.ɵɵtext(8, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 14);\n    i0.ɵɵtext(12, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"label\", 16);\n    i0.ɵɵtext(16, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 18)(19, \"div\", 9)(20, \"label\", 19);\n    i0.ɵɵtext(21, \"City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 9)(24, \"label\", 21);\n    i0.ɵɵtext(25, \"Street\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 9)(28, \"label\", 23);\n    i0.ɵɵtext(29, \"Apartment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 9)(32, \"label\", 25);\n    i0.ɵɵtext(33, \"State\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 9)(36, \"label\", 27);\n    i0.ɵɵtext(37, \"Zip Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"input\", 28);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 9)(40, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AccountComponent_form_17_Template_button_click_40_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmitPersonalInfo());\n    });\n    i0.ɵɵtext(41, \"Update Info\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.personalInfoForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.successMessage);\n  }\n}\nfunction AccountComponent_div_18_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.passwordUpdateMessage);\n  }\n}\nfunction AccountComponent_div_18_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" The passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountComponent_div_18_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Sorry, the minimum length of the password is 8. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AccountComponent_div_18_p_1_Template, 2, 1, \"p\", 7);\n    i0.ɵɵelementStart(2, \"form\", 8)(3, \"div\", 9)(4, \"label\", 30);\n    i0.ɵɵtext(5, \"Old Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"label\", 32);\n    i0.ɵɵtext(9, \"New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 9)(12, \"label\", 34);\n    i0.ɵɵtext(13, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 35);\n    i0.ɵɵtemplate(15, AccountComponent_div_18_p_15_Template, 2, 0, \"p\", 7);\n    i0.ɵɵtemplate(16, AccountComponent_div_18_p_16_Template, 2, 0, \"p\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 9)(18, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_18_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onChangePassword());\n    });\n    i0.ɵɵtext(19, \"Change Password\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.passwordUpdateMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.changePasswordForm);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.changePasswordForm.hasError(\"mismatch\") && ((tmp_2_0 = ctx_r1.changePasswordForm.get(\"confirmPassword\")) == null ? null : tmp_2_0.dirty));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r1.changePasswordForm.get(\"newPassword\")) == null ? null : tmp_3_0.hasError(\"minlength\")) && ((tmp_3_0 = ctx_r1.changePasswordForm.get(\"newPassword\")) == null ? null : tmp_3_0.dirty));\n  }\n}\nfunction AccountComponent_div_19_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 37);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 37);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 37);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 37);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 37);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r12.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r12.orderId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r12.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r12.price);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r12.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r12.date);\n  }\n}\nfunction AccountComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 36)(2, \"thead\")(3, \"tr\")(4, \"th\", 37);\n    i0.ɵɵtext(5, \"OrderItemId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 37);\n    i0.ɵɵtext(7, \"OrderID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 37);\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 37);\n    i0.ɵɵtext(11, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 37);\n    i0.ɵɵtext(13, \"Item Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\", 37);\n    i0.ɵɵtext(15, \"Date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, AccountComponent_div_19_tr_17_Template, 13, 6, \"tr\", 38);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.pastOrders);\n  }\n}\nclass AccountComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.pastOrders = []; // Use the appropriate type for your orders\n    this.selectedSection = 'Personal Info'; // Set initial value\n    this.showPersonalInfo = true;\n    this.showChangePassword = false;\n    this.showPastOrders = false;\n    this.successMessage = null; // Add this line\n    this.passwordUpdateMessage = null;\n  }\n  ngOnInit() {\n    this.personalInfoForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      address: this.formBuilder.group({\n        city: ['', Validators.required],\n        street: ['', Validators.required],\n        apartment: ['', Validators.required],\n        state: ['', Validators.required],\n        zipCode: ['', Validators.required]\n      })\n    });\n    this.changePasswordForm = this.formBuilder.group({\n      oldPassword: ['', Validators.required],\n      newPassword: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validators: this.passwordsMatch\n    }); // Add the validator here\n    this.loadPersonalInfo();\n  }\n  passwordsMatch(formGroup) {\n    const newPasswordControl = formGroup.get('newPassword');\n    const confirmPasswordControl = formGroup.get('confirmPassword');\n    if (newPasswordControl && confirmPasswordControl) {\n      const newPassword = newPasswordControl.value;\n      const confirmPassword = confirmPasswordControl.value;\n      return newPassword === confirmPassword ? null : {\n        mismatch: true\n      };\n    }\n    return null;\n  }\n  displaySection(section) {\n    this.showPersonalInfo = false;\n    this.showChangePassword = false;\n    this.showPastOrders = false;\n    switch (section) {\n      case 'personal-info':\n        this.selectedSection = 'Personal Info';\n        this.showPersonalInfo = true;\n        break;\n      case 'change-password':\n        this.selectedSection = 'Change Password';\n        this.showChangePassword = true;\n        break;\n      case 'past-orders':\n        this.selectedSection = 'Past Orders';\n        this.showPastOrders = true;\n        break;\n      default:\n        console.warn(`Unknown section: ${section}`);\n    }\n  }\n  loadPersonalInfo() {\n    const token = this.getCSRFToken();\n    if (token) {\n      const headers = new HttpHeaders({\n        'x-csrf-token': token\n      });\n      this.http.get('http://localhost:8080/user/getUserData', {\n        headers: headers,\n        withCredentials: true\n      }).subscribe(data => {\n        this.personalInfoForm.patchValue({\n          username: data.username,\n          first_name: data.first_name,\n          last_name: data.last_name,\n          email: data.email,\n          address: data.address // Set address values\n        });\n      });\n    }\n  }\n\n  getCSRFToken() {\n    return localStorage.getItem('csrfToken');\n  }\n  onSubmitPersonalInfo() {\n    if (this.personalInfoForm.valid) {\n      const token = this.getCSRFToken();\n      if (token) {\n        const headers = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'x-csrf-token': token\n        });\n        this.http.post('http://localhost:8080/user/edit', this.personalInfoForm.value, {\n          headers: headers,\n          withCredentials: true,\n          responseType: 'text'\n        }).subscribe({\n          next: response => {\n            console.log('Update successful', response);\n            this.successMessage = 'Updated successfully'; // Add this line\n          },\n\n          error: error => {\n            console.error('There was an error!', error);\n            this.successMessage = null; // Add this line\n          }\n        });\n      }\n    } else {\n      console.error(\"Form is invalid!\");\n    }\n  }\n  onChangePassword() {\n    if (this.changePasswordForm.valid) {\n      const oldPassword = this.changePasswordForm.get('oldPassword')?.value;\n      const newPassword = this.changePasswordForm.get('newPassword')?.value;\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-csrf-token': this.getCSRFToken() || ''\n      });\n      // Send passwords in the request body instead of query parameters\n      const body = {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      };\n      this.http.post('http://localhost:8080/user/update-password', body, {\n        headers: headers,\n        withCredentials: true,\n        responseType: 'text'\n      }).subscribe({\n        next: response => {\n          switch (response) {\n            case 'success':\n              this.passwordUpdateMessage = 'Password updated successfully';\n              break;\n            case \"failure. Old password doesn't match\":\n              this.passwordUpdateMessage = 'Old Password incorrect';\n              break;\n            default:\n              this.passwordUpdateMessage = 'Unexpected error. Please try again later.';\n              break;\n          }\n          console.log('Password update:', response);\n        },\n        error: error => {\n          this.passwordUpdateMessage = 'An error occurred. Please try again later.';\n          console.error('There was an error!', error);\n        }\n      });\n    } else {\n      console.error(\"Form is invalid!\");\n    }\n  }\n  loadPastOrders() {\n    console.log(\"loading past orders\");\n    const csrfToken = this.getCSRFToken();\n    if (csrfToken) {\n      const headers = new HttpHeaders({\n        'x-csrf-token': csrfToken\n      });\n      this.http.post('http://localhost:8080/user/orders', {}, {\n        headers: headers,\n        withCredentials: true\n      }).subscribe(data => {\n        this.pastOrders = data;\n      }, error => {\n        console.log('Error loading past orders:', error);\n      });\n    }\n  }\n}\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"sidebar\"], [1, \"sidebar-menu\"], [3, \"click\"], [2, \"margin-left\", \"50%\"], [1, \"main-content\"], [3, \"formGroup\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"first_name\", \"formControlName\", \"first_name\", 1, \"form-control\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"last_name\", \"formControlName\", \"last_name\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"formGroupName\", \"address\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", 1, \"form-control\"], [\"for\", \"street\"], [\"type\", \"text\", \"id\", \"street\", \"formControlName\", \"street\", 1, \"form-control\"], [\"for\", \"apartment\"], [\"type\", \"text\", \"id\", \"apartment\", \"formControlName\", \"apartment\", 1, \"form-control\"], [\"for\", \"state\"], [\"type\", \"text\", \"id\", \"state\", \"formControlName\", \"state\", 1, \"form-control\"], [\"for\", \"zipCode\"], [\"type\", \"text\", \"id\", \"zipCode\", \"formControlName\", \"zipCode\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"for\", \"oldPassword\"], [\"type\", \"password\", \"id\", \"oldPassword\", \"formControlName\", \"oldPassword\", 1, \"form-control\"], [\"for\", \"newPassword\"], [\"type\", \"password\", \"id\", \"newPassword\", \"formControlName\", \"newPassword\", 1, \"form-control\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [2, \"border\", \"1px solid black\", \"padding\", \"8px\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"ul\", 2)(3, \"li\")(4, \"a\", 3);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_a_click_4_listener() {\n        return ctx.displaySection(\"personal-info\");\n      });\n      i0.ɵɵtext(5, \"Personal Info\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"li\")(7, \"a\", 3);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_a_click_7_listener() {\n        return ctx.displaySection(\"change-password\");\n      });\n      i0.ɵɵtext(8, \"Change Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"li\")(10, \"a\", 3);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_a_click_10_listener() {\n        ctx.displaySection(\"past-orders\");\n        return ctx.loadPastOrders();\n      });\n      i0.ɵɵtext(11, \"Past Orders\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(12, \"h4\", 4);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5);\n      i0.ɵɵelement(15, \"br\")(16, \"br\");\n      i0.ɵɵtemplate(17, AccountComponent_form_17_Template, 42, 2, \"form\", 6);\n      i0.ɵɵtemplate(18, AccountComponent_div_18_Template, 20, 4, \"div\", 7);\n      i0.ɵɵtemplate(19, AccountComponent_div_19_Template, 18, 1, \"div\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵtextInterpolate(ctx.selectedSection);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPersonalInfo);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showChangePassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPastOrders);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    margin-left:0px;\\r\\n  }\\r\\n  \\r\\n  .sidebar[_ngcontent-%COMP%] {\\r\\n    width: 20%;\\r\\n    background-color: #f8f9fa;\\r\\n    padding: 1em;\\r\\n    box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);\\r\\n    height: 100vh;\\r\\n  }\\r\\n  \\r\\n  .sidebar-menu[_ngcontent-%COMP%] {\\r\\n    list-style: none;\\r\\n    padding-left: 0;\\r\\n  }\\r\\n  \\r\\n  .sidebar-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 1em;\\r\\n  }\\r\\n  \\r\\n  .sidebar-menu[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\r\\n    color: #333;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  \\r\\n  .sidebar-menu[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\r\\n    color: #007bff;\\r\\n  }\\r\\n  \\r\\n\\r\\n  \\r\\n  .header[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    color: #007bff;\\r\\n  }\\r\\n.main-content[_ngcontent-%COMP%]{\\r\\n  margin-left:-15%;\\r\\n\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLFVBQVU7SUFDVix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLDRDQUE0QztJQUM1QyxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCOzs7O0VBSUE7SUFDRSxrQkFBa0I7SUFDbEIsY0FBYztFQUNoQjtBQUNGO0VBQ0UsZ0JBQWdCOztBQUVsQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1sZWZ0OjBweDtcclxuICB9XHJcbiAgXHJcbiAgLnNpZGViYXIge1xyXG4gICAgd2lkdGg6IDIwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XHJcbiAgICBwYWRkaW5nOiAxZW07XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggMHB4IHJnYmEoMCwwLDAsMC4xKTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgfVxyXG4gIFxyXG4gIC5zaWRlYmFyLW1lbnUge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxuICB9XHJcbiAgXHJcbiAgLnNpZGViYXItbWVudSBsaSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5zaWRlYmFyLW1lbnUgYSB7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLnNpZGViYXItbWVudSBhOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjMDA3YmZmO1xyXG4gIH1cclxuICBcclxuXHJcbiAgXHJcbiAgLmhlYWRlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzAwN2JmZjtcclxuICB9XHJcbi5tYWluLWNvbnRlbnR7XHJcbiAgbWFyZ2luLWxlZnQ6LTE1JTtcclxuXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { AccountComponent };","map":{"version":3,"names":["Validators","HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","successMessage","ɵɵtemplate","AccountComponent_form_17_p_1_Template","ɵɵelement","ɵɵlistener","AccountComponent_form_17_Template_button_click_40_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","onSubmitPersonalInfo","ɵɵproperty","ctx_r0","personalInfoForm","ctx_r6","passwordUpdateMessage","AccountComponent_div_18_p_1_Template","AccountComponent_div_18_p_15_Template","AccountComponent_div_18_p_16_Template","AccountComponent_div_18_Template_button_click_18_listener","_r10","ctx_r9","onChangePassword","ctx_r1","changePasswordForm","hasError","tmp_2_0","get","dirty","tmp_3_0","order_r12","id","orderId","name","price","quantity","date","AccountComponent_div_19_tr_17_Template","ctx_r2","pastOrders","AccountComponent","constructor","formBuilder","http","selectedSection","showPersonalInfo","showChangePassword","showPastOrders","ngOnInit","group","username","required","first_name","last_name","email","address","city","street","apartment","state","zipCode","oldPassword","newPassword","minLength","confirmPassword","validators","passwordsMatch","loadPersonalInfo","formGroup","newPasswordControl","confirmPasswordControl","value","mismatch","displaySection","section","console","warn","token","getCSRFToken","headers","withCredentials","subscribe","data","patchValue","localStorage","getItem","valid","post","responseType","next","response","log","error","body","loadPastOrders","csrfToken","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","selectors","decls","vars","consts","template","AccountComponent_Template","rf","ctx","AccountComponent_Template_a_click_4_listener","AccountComponent_Template_a_click_7_listener","AccountComponent_Template_a_click_10_listener","AccountComponent_form_17_Template","AccountComponent_div_18_Template","AccountComponent_div_19_Template"],"sources":["C:\\Users\\msitr\\OneDrive\\Desktop\\ElectronicStore2\\Electronic_Store\\front-end\\src\\app\\account\\account.component.ts","C:\\Users\\msitr\\OneDrive\\Desktop\\ElectronicStore2\\Electronic_Store\\front-end\\src\\app\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  personalInfoForm!: FormGroup;\r\n  changePasswordForm!: FormGroup;  // Add this line\r\n  pastOrders: any[] = []; // Use the appropriate type for your orders\r\n\r\n\r\n  selectedSection = 'Personal Info'; // Set initial value\r\n  showPersonalInfo = true;\r\n  showChangePassword = false;\r\n  showPastOrders = false;\r\n  successMessage: string | null = null; // Add this line\r\n  passwordUpdateMessage: string | null = null;\r\n\r\n  \r\n\r\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.personalInfoForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      first_name: ['', Validators.required],\r\n      last_name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      address: this.formBuilder.group({ // Add address group\r\n        city: ['', Validators.required],\r\n        street: ['', Validators.required],\r\n        apartment: ['', Validators.required],\r\n        state: ['', Validators.required],\r\n        zipCode: ['', Validators.required]\r\n      })\r\n    });\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      oldPassword: ['', Validators.required],\r\n      newPassword: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, { validators: this.passwordsMatch });  // Add the validator here\r\n\r\n\r\n    this.loadPersonalInfo();\r\n\r\n\r\n    \r\n\r\n    \r\n  }\r\n  \r\npasswordsMatch(formGroup: FormGroup): ValidationErrors | null {\r\n  const newPasswordControl = formGroup.get('newPassword');\r\n  const confirmPasswordControl = formGroup.get('confirmPassword');\r\n\r\n  if (newPasswordControl && confirmPasswordControl) {\r\n    const newPassword = newPasswordControl.value;\r\n    const confirmPassword = confirmPasswordControl.value;\r\n    return newPassword === confirmPassword ? null : { mismatch: true };\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n  displaySection(section: string) {\r\n    this.showPersonalInfo = false;\r\n    this.showChangePassword = false;\r\n    this.showPastOrders = false;\r\n\r\n    switch (section) {\r\n      case 'personal-info':\r\n        this.selectedSection = 'Personal Info';\r\n        this.showPersonalInfo = true;\r\n        break;\r\n      case 'change-password':\r\n        this.selectedSection = 'Change Password';\r\n        this.showChangePassword = true;\r\n        break;\r\n      case 'past-orders':\r\n        this.selectedSection = 'Past Orders';\r\n        this.showPastOrders = true;\r\n        break;\r\n      default:\r\n        console.warn(`Unknown section: ${section}`);\r\n    }\r\n  }\r\n\r\n  private loadPersonalInfo() {\r\n    const token = this.getCSRFToken();\r\n\r\n    if (token) {\r\n      const headers = new HttpHeaders({\r\n        'x-csrf-token': token\r\n      });\r\n\r\n      this.http.get('http://localhost:8080/user/getUserData', { headers: headers, withCredentials: true }).subscribe((data: any) => {\r\n   \r\n\r\n\r\n        this.personalInfoForm.patchValue({\r\n          username: data.username,\r\n          first_name: data.first_name,\r\n          last_name: data.last_name,\r\n          email: data.email,\r\n          address: data.address // Set address values\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getCSRFToken(): string | null {\r\n    return localStorage.getItem('csrfToken');\r\n  }\r\n\r\n  onSubmitPersonalInfo() {\r\n    if (this.personalInfoForm.valid) {\r\n      const token = this.getCSRFToken();\r\n  \r\n      if (token) {\r\n        const headers = new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          'x-csrf-token': token\r\n        });\r\n  \r\n        this.http.post('http://localhost:8080/user/edit', this.personalInfoForm.value, { headers: headers, withCredentials: true, responseType: 'text' })\r\n          .subscribe({\r\n            next: response => {\r\n              console.log('Update successful', response);\r\n              this.successMessage = 'Updated successfully'; // Add this line\r\n            },\r\n            error: error => {\r\n              console.error('There was an error!', error);\r\n              this.successMessage = null; // Add this line\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      console.error(\"Form is invalid!\");\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  onChangePassword() {\r\n    if (this.changePasswordForm.valid) {\r\n      const oldPassword = this.changePasswordForm.get('oldPassword')?.value;\r\n      const newPassword = this.changePasswordForm.get('newPassword')?.value;\r\n  \r\n      const headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-csrf-token': this.getCSRFToken() || ''\r\n      });\r\n  \r\n      // Send passwords in the request body instead of query parameters\r\n      const body = {\r\n        oldPassword: oldPassword,\r\n        newPassword: newPassword\r\n      };\r\n  \r\n      this.http.post('http://localhost:8080/user/update-password', body, { \r\n        headers: headers, \r\n        withCredentials: true, \r\n        responseType: 'text' \r\n      })\r\n      .subscribe({\r\n        next: response => {\r\n          switch (response) {\r\n            case 'success':\r\n              this.passwordUpdateMessage = 'Password updated successfully';\r\n              break;\r\n            case \"failure. Old password doesn't match\":\r\n              this.passwordUpdateMessage = 'Old Password incorrect';\r\n              break;\r\n            default:\r\n              this.passwordUpdateMessage = 'Unexpected error. Please try again later.';\r\n              break;\r\n          }\r\n          console.log('Password update:', response);\r\n        },\r\n        error: error => {\r\n          this.passwordUpdateMessage = 'An error occurred. Please try again later.';\r\n          console.error('There was an error!', error);\r\n        }\r\n      });\r\n    } else {\r\n      console.error(\"Form is invalid!\");\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  loadPastOrders() {\r\n    console.log(\"loading past orders\");\r\n    \r\n    const csrfToken: string | null = this.getCSRFToken();\r\n  \r\n    if (csrfToken) {\r\n      const headers = new HttpHeaders({\r\n        'x-csrf-token': csrfToken\r\n      });\r\n  \r\n      this.http.post('http://localhost:8080/user/orders', {}, { headers: headers, withCredentials: true }).subscribe((data: any) => {\r\n        this.pastOrders = data;\r\n      }, error => {\r\n        console.log('Error loading past orders:', error);\r\n      });\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n  <!-- This is the sidebar -->\r\n  <div class=\"sidebar\">\r\n    <ul class=\"sidebar-menu\">\r\n      <li><a (click)=\"displaySection('personal-info')\">Personal Info</a></li>\r\n      <li><a (click)=\"displaySection('change-password')\">Change Password</a></li>\r\n      <li><a (click)=\"displaySection('past-orders'); loadPastOrders()\">Past Orders</a></li>\r\n    </ul>\r\n  </div>\r\n  <h4 style=\"margin-left:50%\">{{ selectedSection }}</h4>\r\n\r\n  <!-- This is the main content area -->\r\n  <div class=\"main-content\">\r\n    <br><br>\r\n    <!-- Personal Info Form -->\r\n    \r\n    <form [formGroup]=\"personalInfoForm\" *ngIf=\"showPersonalInfo\">\r\n      <p *ngIf=\"successMessage\">{{ successMessage }}</p>\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" id=\"username\" formControlName=\"username\" class=\"form-control\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input type=\"text\" id=\"first_name\" formControlName=\"first_name\" class=\"form-control\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input type=\"text\" id=\"last_name\" formControlName=\"last_name\" class=\"form-control\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\" />\r\n      </div>\r\n      <!-- Address Info -->\r\n      <div formGroupName=\"address\">\r\n        <div class=\"form-group\">\r\n          <label for=\"city\">City</label>\r\n          <input type=\"text\" id=\"city\" formControlName=\"city\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"street\">Street</label>\r\n          <input type=\"text\" id=\"street\" formControlName=\"street\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"apartment\">Apartment</label>\r\n          <input type=\"text\" id=\"apartment\" formControlName=\"apartment\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"state\">State</label>\r\n          <input type=\"text\" id=\"state\" formControlName=\"state\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"zipCode\">Zip Code</label>\r\n          <input type=\"text\" id=\"zipCode\" formControlName=\"zipCode\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmitPersonalInfo()\">Update Info</button>\r\n      </div>\r\n    </form>\r\n\r\n    <!-- Change Password Form -->\r\n    <div *ngIf=\"showChangePassword\">\r\n      <p *ngIf=\"passwordUpdateMessage\">{{ passwordUpdateMessage }}</p>\r\n      <form [formGroup]=\"changePasswordForm\">\r\n        <div class=\"form-group\">\r\n          <label for=\"oldPassword\">Old Password</label>\r\n          <input type=\"password\" id=\"oldPassword\" formControlName=\"oldPassword\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"newPassword\">New Password</label>\r\n          <input type=\"password\" id=\"newPassword\" formControlName=\"newPassword\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirm Password</label>\r\n          <input type=\"password\" id=\"confirmPassword\" formControlName=\"confirmPassword\" class=\"form-control\" />\r\n          <p *ngIf=\"changePasswordForm.hasError('mismatch') && changePasswordForm.get('confirmPassword')?.dirty\">\r\n            The passwords do not match.\r\n          </p>\r\n          <!-- Check for the 'minlength' error on the newPassword form control -->\r\n          <p *ngIf=\"changePasswordForm.get('newPassword')?.hasError('minlength') && changePasswordForm.get('newPassword')?.dirty\">\r\n            Sorry, the minimum length of the password is 8.\r\n          </p>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onChangePassword()\">Change Password</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Past Orders Section -->\r\n    <div *ngIf=\"showPastOrders\">\r\n      <table class=\"table table-striped table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th style=\"border: 1px solid black; padding: 8px;\">OrderItemId</th>\r\n            <th style=\"border: 1px solid black; padding: 8px;\">OrderID</th>\r\n            <th style=\"border: 1px solid black; padding: 8px;\">Name</th>\r\n            <th style=\"border: 1px solid black; padding: 8px;\">Price</th>\r\n            <th style=\"border: 1px solid black; padding: 8px;\">Item Quantity</th>\r\n            <th style=\"border: 1px solid black; padding: 8px;\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let order of pastOrders\">\r\n            <td style=\"border: 1px solid black; padding: 8px;\">{{order.id}}</td>\r\n            <td style=\"border: 1px solid black; padding: 8px;\">{{order.orderId}}</td>\r\n            <td style=\"border: 1px solid black; padding: 8px;\">{{order.name}}</td>\r\n            <td style=\"border: 1px solid black; padding: 8px;\">{{order.price}}</td>\r\n            <td style=\"border: 1px solid black; padding: 8px;\">{{order.quantity}}</td>\r\n            <td style=\"border: 1px solid black; padding: 8px;\">{{order.date}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}